"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = require("inversify");
var boards_list_widget_1 = require("./boards-list-widget");
var arduino_frontend_contribution_1 = require("../arduino-frontend-contribution");
var list_widget_frontend_contribution_1 = require("../components/component-list/list-widget-frontend-contribution");
var BoardsListWidgetFrontendContribution = /** @class */ (function (_super) {
    __extends(BoardsListWidgetFrontendContribution, _super);
    function BoardsListWidgetFrontendContribution() {
        return _super.call(this, {
            widgetId: boards_list_widget_1.BoardsListWidget.WIDGET_ID,
            widgetName: boards_list_widget_1.BoardsListWidget.WIDGET_LABEL,
            defaultWidgetOptions: {
                area: 'left',
                rank: 600
            },
            toggleCommandId: BoardsListWidgetFrontendContribution_1.OPEN_MANAGER,
            toggleKeybinding: 'ctrlcmd+shift+b'
        }) || this;
    }
    BoardsListWidgetFrontendContribution_1 = BoardsListWidgetFrontendContribution;
    BoardsListWidgetFrontendContribution.prototype.registerMenus = function (menus) {
        if (this.toggleCommand) {
            menus.registerMenuAction(arduino_frontend_contribution_1.ArduinoMenus.TOOLS, {
                commandId: this.toggleCommand.id,
                label: 'Boards Manager...'
            });
        }
    };
    var BoardsListWidgetFrontendContribution_1;
    BoardsListWidgetFrontendContribution.OPEN_MANAGER = boards_list_widget_1.BoardsListWidget.WIDGET_ID + ":toggle";
    BoardsListWidgetFrontendContribution = BoardsListWidgetFrontendContribution_1 = __decorate([
        inversify_1.injectable(),
        __metadata("design:paramtypes", [])
    ], BoardsListWidgetFrontendContribution);
    return BoardsListWidgetFrontendContribution;
}(list_widget_frontend_contribution_1.ListWidgetFrontendContribution));
exports.BoardsListWidgetFrontendContribution = BoardsListWidgetFrontendContribution;
//# sourceMappingURL=boards-widget-frontend-contribution.js.map