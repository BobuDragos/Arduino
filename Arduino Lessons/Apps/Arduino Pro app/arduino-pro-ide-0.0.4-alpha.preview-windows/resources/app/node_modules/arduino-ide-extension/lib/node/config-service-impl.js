"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function (o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
};
Object.defineProperty(exports, "__esModule", { value: true });
var fs = require("./fs-extra");
var inversify_1 = require("inversify");
var uri_1 = require("@theia/core/lib/common/uri");
var file_uri_1 = require("@theia/core/lib/node/file-uri");
var promise_util_1 = require("@theia/core/lib/common/promise-util");
var arduino_cli_1 = require("./arduino-cli");
var ConfigServiceImpl = /** @class */ (function () {
    function ConfigServiceImpl() {
        this.config = new promise_util_1.Deferred();
    }
    ConfigServiceImpl.prototype.init = function () {
        return __awaiter(this, void 0, void 0, function () {
            var config, dataDirUri, sketchDirUri, _a, _b, uri, path, e_1_1, err_1;
            var e_1, _c;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        _d.trys.push([0, 10, , 11]);
                        return [4 /*yield*/, this.cli.getDefaultConfig()];
                    case 1:
                        config = _d.sent();
                        dataDirUri = config.dataDirUri, sketchDirUri = config.sketchDirUri;
                        _d.label = 2;
                    case 2:
                        _d.trys.push([2, 7, 8, 9]);
                        _a = __values([dataDirUri, sketchDirUri]), _b = _a.next();
                        _d.label = 3;
                    case 3:
                        if (!!_b.done) return [3 /*break*/, 6];
                        uri = _b.value;
                        path = file_uri_1.FileUri.fsPath(uri);
                        if (!!fs.existsSync(path)) return [3 /*break*/, 5];
                        return [4 /*yield*/, fs.mkdirp(path)];
                    case 4:
                        _d.sent();
                        _d.label = 5;
                    case 5:
                        _b = _a.next();
                        return [3 /*break*/, 3];
                    case 6: return [3 /*break*/, 9];
                    case 7:
                        e_1_1 = _d.sent();
                        e_1 = { error: e_1_1 };
                        return [3 /*break*/, 9];
                    case 8:
                        try {
                            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
                        }
                        finally { if (e_1) throw e_1.error; }
                        return [7 /*endfinally*/];
                    case 9:
                        this.config.resolve(config);
                        return [3 /*break*/, 11];
                    case 10:
                        err_1 = _d.sent();
                        this.config.reject(err_1);
                        return [3 /*break*/, 11];
                    case 11: return [2 /*return*/];
                }
            });
        });
    };
    ConfigServiceImpl.prototype.getConfiguration = function () {
        return this.config.promise;
    };
    ConfigServiceImpl.prototype.getVersion = function () {
        return this.cli.getVersion();
    };
    ConfigServiceImpl.prototype.isInDataDir = function (uri) {
        return this.getConfiguration().then(function (_a) {
            var dataDirUri = _a.dataDirUri;
            return new uri_1.default(dataDirUri).isEqualOrParent(new uri_1.default(uri));
        });
    };
    ConfigServiceImpl.prototype.isInSketchDir = function (uri) {
        return this.getConfiguration().then(function (_a) {
            var sketchDirUri = _a.sketchDirUri;
            return new uri_1.default(sketchDirUri).isEqualOrParent(new uri_1.default(uri));
        });
    };
    __decorate([
        inversify_1.inject(arduino_cli_1.ArduinoCli),
        __metadata("design:type", arduino_cli_1.ArduinoCli)
    ], ConfigServiceImpl.prototype, "cli", void 0);
    __decorate([
        inversify_1.postConstruct(),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", Promise)
    ], ConfigServiceImpl.prototype, "init", null);
    ConfigServiceImpl = __decorate([
        inversify_1.injectable()
    ], ConfigServiceImpl);
    return ConfigServiceImpl;
}());
exports.ConfigServiceImpl = ConfigServiceImpl;
//# sourceMappingURL=config-service-impl.js.map