{"version":3,"sources":["webpack:///./node_modules/@theia/markers/src/browser/problem/problem-contribution.ts"],"names":[],"mappings":"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","file":"31.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport debounce = require('lodash.debounce');\nimport { injectable, inject } from 'inversify';\nimport { FrontendApplication, FrontendApplicationContribution, CompositeTreeNode, SelectableTreeNode, Widget } from '@theia/core/lib/browser';\nimport { StatusBar, StatusBarAlignment } from '@theia/core/lib/browser/status-bar/status-bar';\nimport { AbstractViewContribution } from '@theia/core/lib/browser/shell/view-contribution';\nimport { PROBLEM_KIND, ProblemMarker } from '../../common/problem-marker';\nimport { ProblemManager, ProblemStat } from './problem-manager';\nimport { ProblemWidget, PROBLEMS_WIDGET_ID } from './problem-widget';\nimport { MenuPath, MenuModelRegistry } from '@theia/core/lib/common/menu';\nimport { Command, CommandRegistry } from '@theia/core/lib/common/command';\nimport { TabBarToolbarContribution, TabBarToolbarRegistry } from '@theia/core/lib/browser/shell/tab-bar-toolbar';\nimport { SelectionService } from '@theia/core/lib/common/selection-service';\nimport { ProblemSelection } from './problem-selection';\n\nexport const PROBLEMS_CONTEXT_MENU: MenuPath = [PROBLEM_KIND];\n\nexport namespace ProblemsMenu {\n    export const CLIPBOARD = [...PROBLEMS_CONTEXT_MENU, '1_clipboard'];\n    export const PROBLEMS = [...PROBLEMS_CONTEXT_MENU, '2_problems'];\n}\n\nexport namespace ProblemsCommands {\n    export const COLLAPSE_ALL: Command = {\n        id: 'problems.collapse.all'\n    };\n    export const COLLAPSE_ALL_TOOLBAR: Command = {\n        id: 'problems.collapse.all.toolbar',\n        iconClass: 'collapse-all'\n    };\n    export const COPY: Command = {\n        id: 'problems.copy'\n    };\n    export const COPY_MESSAGE: Command = {\n        id: 'problems.copy.message',\n    };\n}\n\n@injectable()\nexport class ProblemContribution extends AbstractViewContribution<ProblemWidget> implements FrontendApplicationContribution, TabBarToolbarContribution {\n\n    @inject(ProblemManager) protected readonly problemManager: ProblemManager;\n    @inject(StatusBar) protected readonly statusBar: StatusBar;\n    @inject(SelectionService) protected readonly selectionService: SelectionService;\n\n    constructor() {\n        super({\n            widgetId: PROBLEMS_WIDGET_ID,\n            widgetName: 'Problems',\n            defaultWidgetOptions: {\n                area: 'bottom'\n            },\n            toggleCommandId: 'problemsView:toggle',\n            toggleKeybinding: 'ctrlcmd+shift+m'\n        });\n    }\n\n    onStart(app: FrontendApplication): void {\n        this.updateStatusBarElement();\n        this.problemManager.onDidChangeMarkers(this.updateStatusBarElement);\n    }\n\n    async initializeLayout(app: FrontendApplication): Promise<void> {\n        await this.openView();\n    }\n\n    protected updateStatusBarElement = debounce(() => this.setStatusBarElement(this.problemManager.getProblemStat()), 10);\n    protected setStatusBarElement(problemStat: ProblemStat): void {\n        this.statusBar.setElement('problem-marker-status', {\n            text: problemStat.infos <= 0\n                ? `$(times-circle) ${problemStat.errors} $(exclamation-triangle) ${problemStat.warnings}`\n                : `$(times-circle) ${problemStat.errors} $(exclamation-triangle) ${problemStat.warnings} $(info-circle) ${problemStat.infos}`,\n            alignment: StatusBarAlignment.LEFT,\n            priority: 10,\n            command: this.toggleCommand ? this.toggleCommand.id : undefined\n        });\n    }\n\n    registerCommands(commands: CommandRegistry): void {\n        super.registerCommands(commands);\n        commands.registerCommand(ProblemsCommands.COLLAPSE_ALL, {\n            execute: () => this.collapseAllProblems()\n        });\n        commands.registerCommand(ProblemsCommands.COLLAPSE_ALL_TOOLBAR, {\n            isEnabled: widget => this.withWidget(widget, () => true),\n            isVisible: widget => this.withWidget(widget, () => true),\n            execute: widget => this.withWidget(widget, () => this.collapseAllProblems())\n        });\n        commands.registerCommand(ProblemsCommands.COPY,\n            new ProblemSelection.CommandHandler(this.selectionService, {\n                multi: false,\n                isEnabled: () => true,\n                isVisible: () => true,\n                execute: selection => this.copy(selection)\n            })\n        );\n        commands.registerCommand(ProblemsCommands.COPY_MESSAGE,\n            new ProblemSelection.CommandHandler(this.selectionService, {\n                multi: false,\n                isEnabled: () => true,\n                isVisible: () => true,\n                execute: selection => this.copyMessage(selection)\n            })\n        );\n    }\n\n    registerMenus(menus: MenuModelRegistry): void {\n        super.registerMenus(menus);\n        menus.registerMenuAction(ProblemsMenu.CLIPBOARD, {\n            commandId: ProblemsCommands.COPY.id,\n            label: 'Copy',\n            order: '0'\n        });\n        menus.registerMenuAction(ProblemsMenu.CLIPBOARD, {\n            commandId: ProblemsCommands.COPY_MESSAGE.id,\n            label: 'Copy Message',\n            order: '1'\n        });\n        menus.registerMenuAction(ProblemsMenu.PROBLEMS, {\n            commandId: ProblemsCommands.COLLAPSE_ALL.id,\n            label: 'Collapse All',\n            order: '2'\n        });\n    }\n\n    async registerToolbarItems(toolbarRegistry: TabBarToolbarRegistry): Promise<void> {\n        toolbarRegistry.registerItem({\n            id: ProblemsCommands.COLLAPSE_ALL_TOOLBAR.id,\n            command: ProblemsCommands.COLLAPSE_ALL_TOOLBAR.id,\n            tooltip: 'Collapse All',\n            priority: 0,\n        });\n    }\n\n    protected async collapseAllProblems(): Promise<void> {\n        const { model } = await this.widget;\n        const root = model.root as CompositeTreeNode;\n        const firstChild = root.children[0];\n        root.children.forEach(child => CompositeTreeNode.is(child) && model.collapseAll(child));\n        if (SelectableTreeNode.is(firstChild)) {\n            model.selectNode(firstChild);\n        }\n    }\n\n    protected addToClipboard(content: string): void {\n        const handleCopy = (e: ClipboardEvent) => {\n            document.removeEventListener('copy', handleCopy);\n            if (e.clipboardData) {\n                e.clipboardData.setData('text/plain', content);\n                e.preventDefault();\n            }\n        };\n        document.addEventListener('copy', handleCopy);\n        document.execCommand('copy');\n    }\n\n    protected copy(selection: ProblemSelection): void {\n        const marker = selection.marker as ProblemMarker;\n        const serializedProblem = JSON.stringify({\n            resource: marker.uri,\n            owner: marker.uri,\n            code: marker.data.code,\n            severity: marker.data.severity,\n            message: marker.data.message,\n            source: marker.data.source,\n            startLineNumber: marker.data.range.start.line,\n            startColumn: marker.data.range.start.character,\n            endLineNumber: marker.data.range.end.line,\n            endColumn: marker.data.range.end.character\n        }, undefined, '\\t');\n\n        this.addToClipboard(serializedProblem);\n    }\n\n    protected copyMessage(selection: ProblemSelection): void {\n        const marker = selection.marker as ProblemMarker;\n        this.addToClipboard(marker.data.message);\n    }\n\n    protected withWidget<T>(widget: Widget | undefined = this.tryGetWidget(), cb: (problems: ProblemWidget) => T): T | false {\n        if (widget instanceof ProblemWidget && widget.id === PROBLEMS_WIDGET_ID) {\n            return cb(widget);\n        }\n        return false;\n    }\n}\n"],"sourceRoot":""}