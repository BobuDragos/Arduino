{"version":3,"sources":["webpack:///./node_modules/@theia/core/src/common/severity.ts","webpack:///./node_modules/@theia/preferences/src/browser/index.ts","webpack:///./node_modules/@theia/task/src/browser/task-contribution.ts","webpack:///./node_modules/@theia/task/src/browser/task-definition-registry.ts","webpack:///./node_modules/@theia/task/src/browser/task-problem-matcher-registry.ts","webpack:///./node_modules/@theia/task/src/browser/task-problem-pattern-registry.ts","webpack:///./node_modules/@theia/task/src/common/index.ts","webpack:///./node_modules/@theia/task/src/common/problem-matcher-protocol.ts","webpack:///./node_modules/@theia/task/src/common/task-protocol.ts","webpack:///./node_modules/@theia/task/src/common/task-watcher.ts"],"names":[],"mappings":"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","file":"26.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DiagnosticSeverity } from 'vscode-languageserver-types';\n\nexport enum Severity {\n    Ignore = 0,\n    Error = 1,\n    Warning = 2,\n    Info = 3,\n    Log = 4\n}\n\nexport namespace Severity {\n    const error = 'Errors';\n    const warning = 'Warnings';\n    const info = 'Info';\n    const log = 'Log';\n    const ignore = 'All';\n\n    export function fromValue(value: string | undefined): Severity {\n        value = value && value.toLowerCase();\n\n        if (!value) {\n            return Severity.Ignore;\n        }\n        if (['error', 'errors'].indexOf(value) !== -1) {\n            return Severity.Error;\n        }\n        if (['warn', 'warning', 'warnings'].indexOf(value) !== -1) {\n            return Severity.Warning;\n        }\n        if (value === 'info') {\n            return Severity.Info;\n        }\n        if (value === 'log') {\n            return Severity.Log;\n        }\n\n        return Severity.Ignore;\n    }\n\n    export function toDiagnosticSeverity(value: Severity): DiagnosticSeverity {\n        switch (value) {\n            case Severity.Ignore:\n                return DiagnosticSeverity.Hint;\n            case Severity.Info:\n                return DiagnosticSeverity.Information;\n            case Severity.Log:\n                return DiagnosticSeverity.Information;\n            case Severity.Warning:\n                return DiagnosticSeverity.Warning;\n            case Severity.Error:\n                return DiagnosticSeverity.Error;\n            default:\n                return DiagnosticSeverity.Error;\n        }\n    }\n\n    export function toString(severity: Severity | undefined): string {\n        switch (severity) {\n            case Severity.Error:\n                return error;\n            case Severity.Warning:\n                return warning;\n            case Severity.Info:\n                return info;\n            case Severity.Log:\n                return log;\n            default:\n                return ignore;\n        }\n    }\n\n    export function toArray(): string[] {\n        return [ignore, error, warning, info, log];\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from '@theia/core/lib/browser/preferences';\nexport * from './abstract-resource-preference-provider';\nexport * from './user-preference-provider';\nexport * from './workspace-preference-provider';\nexport * from './folders-preferences-provider';\nexport * from './folder-preference-provider';\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, postConstruct } from 'inversify';\nimport { Disposable } from '@theia/core/lib/common/disposable';\nimport { TaskConfiguration } from '../common/task-protocol';\nimport { WaitUntilEvent, Emitter } from '@theia/core/lib/common/event';\n\nexport const TaskContribution = Symbol('TaskContribution');\n\n/** Allows to contribute custom Task Resolvers, Task Providers. */\nexport interface TaskContribution {\n    registerResolvers?(resolvers: TaskResolverRegistry): void;\n    registerProviders?(providers: TaskProviderRegistry): void;\n}\n\nexport interface TaskResolver {\n    /** Resolves a Task Configuration before sending it for execution to the Task Server. */\n    resolveTask(taskConfig: TaskConfiguration): Promise<TaskConfiguration>;\n}\n\nexport interface TaskProvider {\n    /** Returns the Task Configurations which are provides programmatically to the system. */\n    provideTasks(): Promise<TaskConfiguration[]>;\n}\n\n@injectable()\nexport class TaskResolverRegistry {\n\n    protected readonly onWillProvideTaskResolverEmitter = new Emitter<WaitUntilEvent>();\n    readonly onWillProvideTaskResolver = this.onWillProvideTaskResolverEmitter.event;\n\n    protected resolvers: Map<string, TaskResolver>;\n\n    @postConstruct()\n    protected init(): void {\n        this.resolvers = new Map();\n    }\n\n    /** Registers the given Task Resolver to resolve the Task Configurations of the specified type. */\n    register(type: string, resolver: TaskResolver): Disposable {\n        this.resolvers.set(type, resolver);\n        return {\n            dispose: () => this.resolvers.delete(type)\n        };\n    }\n\n    async getResolver(type: string): Promise<TaskResolver | undefined> {\n        await WaitUntilEvent.fire(this.onWillProvideTaskResolverEmitter, {});\n        return this.resolvers.get(type);\n    }\n}\n\n@injectable()\nexport class TaskProviderRegistry {\n\n    protected readonly onWillProvideTaskProviderEmitter = new Emitter<WaitUntilEvent>();\n    readonly onWillProvideTaskProvider = this.onWillProvideTaskProviderEmitter.event;\n\n    protected providers: Map<string, TaskProvider>;\n\n    @postConstruct()\n    protected init(): void {\n        this.providers = new Map();\n    }\n\n    /** Registers the given Task Provider to return Task Configurations of the specified type. */\n    register(type: string, provider: TaskProvider, handle?: number): Disposable {\n        const key = handle === undefined ? type : `${type}::${handle}`;\n        this.providers.set(key, provider);\n        return {\n            dispose: () => this.providers.delete(key)\n        };\n    }\n\n    async getProvider(type: string): Promise<TaskProvider | undefined> {\n        await WaitUntilEvent.fire(this.onWillProvideTaskProviderEmitter, {});\n        return this.providers.get(type);\n    }\n\n    /** Returns all registered Task Providers. */\n    async getProviders(): Promise<TaskProvider[]> {\n        await WaitUntilEvent.fire(this.onWillProvideTaskProviderEmitter, {});\n        return [...this.providers.values()];\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { Event, Emitter } from '@theia/core/lib/common';\nimport { TaskConfiguration, TaskCustomization, TaskDefinition } from '../common';\nimport URI from '@theia/core/lib/common/uri';\nimport { Disposable } from '@theia/core/lib/common/disposable';\n\n@injectable()\nexport class TaskDefinitionRegistry {\n\n    // task type - array of task definitions\n    private definitions: Map<string, TaskDefinition[]> = new Map();\n\n    protected readonly onDidRegisterTaskDefinitionEmitter = new Emitter<void>();\n    get onDidRegisterTaskDefinition(): Event<void> {\n        return this.onDidRegisterTaskDefinitionEmitter.event;\n    }\n\n    protected readonly onDidUnregisterTaskDefinitionEmitter = new Emitter<void>();\n    get onDidUnregisterTaskDefinition(): Event<void> {\n        return this.onDidUnregisterTaskDefinitionEmitter.event;\n    }\n\n    /**\n     * Returns all task definitions that are registered\n     * @return the task definitions that are registered\n     */\n    getAll(): TaskDefinition[] {\n        const all: TaskDefinition[] = [];\n        for (const definitions of this.definitions.values()) {\n            all.push(...definitions);\n        }\n        return all;\n    }\n\n    /**\n     * Finds the task definition(s) from the registry with the given `taskType`.\n     *\n     * @param taskType the type of the task\n     * @return an array of the task definitions. If no task definitions are found, an empty array is returned.\n     */\n    getDefinitions(taskType: string): TaskDefinition[] {\n        return this.definitions.get(taskType) || [];\n    }\n\n    /**\n     * Finds the task definition from the registry for the task configuration.\n     * The task configuration is considered as a \"match\" to the task definition if it has all the `required` properties.\n     * In case that more than one task definition is found, return the one that has the biggest number of matched properties.\n     *\n     * @param taskConfiguration the task configuration\n     * @return the task definition for the task configuration. If the task definition is not found, `undefined` is returned.\n     */\n    getDefinition(taskConfiguration: TaskConfiguration | TaskCustomization): TaskDefinition | undefined {\n        const definitions = this.getDefinitions(taskConfiguration.taskType || taskConfiguration.type);\n        let matchedDefinition: TaskDefinition | undefined;\n        let highest = -1;\n        for (const def of definitions) {\n            let score = 0;\n            if (!def.properties.required.every(requiredProp => taskConfiguration[requiredProp] !== undefined)) {\n                continue;\n            }\n            score += def.properties.required.length; // number of required properties\n            const requiredProps = new Set(def.properties.required);\n            // number of optional properties\n            score += def.properties.all.filter(p => !requiredProps.has(p) && taskConfiguration[p] !== undefined).length;\n            if (score > highest) {\n                highest = score;\n                matchedDefinition = def;\n            }\n        }\n        return matchedDefinition;\n    }\n\n    /**\n     * Add a task definition to the registry.\n     *\n     * @param definition the task definition to be added.\n     */\n    register(definition: TaskDefinition): Disposable {\n        const taskType = definition.taskType;\n        const definitions = this.definitions.get(taskType) || [];\n        definitions.push(definition);\n        this.definitions.set(taskType, definitions);\n        this.onDidRegisterTaskDefinitionEmitter.fire(undefined);\n        return Disposable.create(() => {\n            const index = definitions.indexOf(definition);\n            if (index !== -1) {\n                definitions.splice(index, 1);\n            }\n            this.onDidUnregisterTaskDefinitionEmitter.fire(undefined);\n        });\n    }\n\n    compareTasks(one: TaskConfiguration, other: TaskConfiguration): boolean {\n        const oneType = one.taskType || one.type;\n        const otherType = other.taskType || other.type;\n        if (oneType !== otherType) {\n            return false;\n        }\n        const def = this.getDefinition(one);\n        if (def) {\n            const oneScope = new URI(one._scope).path.toString();\n            const otherScope = new URI(other._scope).path.toString();\n            return def.properties.all.every(p => p === 'type' || one[p] === other[p]) && oneScope === otherScope;\n        }\n        return one.label === other.label && one._source === other._source;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { inject, injectable, postConstruct } from 'inversify';\nimport { Event, Emitter } from '@theia/core/lib/common';\nimport { Disposable, DisposableCollection } from '@theia/core/lib/common/disposable';\nimport {\n    ApplyToKind, FileLocationKind, NamedProblemMatcher,\n    ProblemPattern, ProblemMatcher, ProblemMatcherContribution, WatchingMatcher\n} from '../common';\nimport { ProblemPatternRegistry } from './task-problem-pattern-registry';\nimport { Severity } from '@theia/core/lib/common/severity';\n\n@injectable()\nexport class ProblemMatcherRegistry {\n\n    private readonly matchers = new Map<string, NamedProblemMatcher>();\n    private readyPromise: Promise<void>;\n\n    @inject(ProblemPatternRegistry)\n    protected readonly problemPatternRegistry: ProblemPatternRegistry;\n\n    protected readonly onDidChangeProblemMatcherEmitter = new Emitter<void>();\n    get onDidChangeProblemMatcher(): Event<void> {\n        return this.onDidChangeProblemMatcherEmitter.event;\n    }\n\n    @postConstruct()\n    protected init(): void {\n        this.problemPatternRegistry.onReady().then(() => {\n            this.fillDefaults();\n            this.readyPromise = new Promise<void>((res, rej) => res(undefined));\n            this.onDidChangeProblemMatcherEmitter.fire(undefined);\n        });\n    }\n\n    onReady(): Promise<void> {\n        return this.readyPromise;\n    }\n\n    /**\n     * Add a problem matcher to the registry.\n     *\n     * @param definition the problem matcher to be added.\n     */\n    register(matcher: ProblemMatcherContribution): Disposable {\n        if (!matcher.name) {\n            console.error('Only named Problem Matchers can be registered.');\n            return Disposable.NULL;\n        }\n        const toDispose = new DisposableCollection(Disposable.create(() => {\n            /* mark as not disposed */\n            this.onDidChangeProblemMatcherEmitter.fire(undefined);\n        }));\n        this.doRegister(matcher, toDispose).then(() => this.onDidChangeProblemMatcherEmitter.fire(undefined));\n        return toDispose;\n    }\n    protected async doRegister(matcher: ProblemMatcherContribution, toDispose: DisposableCollection): Promise<void> {\n        const problemMatcher = await this.getProblemMatcherFromContribution(matcher);\n        if (toDispose.disposed) {\n            return;\n        }\n        toDispose.push(this.add(problemMatcher as NamedProblemMatcher));\n    }\n\n    /**\n     * Finds the problem matcher from the registry by its name.\n     *\n     * @param name the name of the problem matcher\n     * @return the problem matcher. If the task definition is not found, `undefined` is returned.\n     */\n    get(name: string): NamedProblemMatcher | undefined {\n        if (name.startsWith('$')) {\n            return this.matchers.get(name.slice(1));\n        }\n        return this.matchers.get(name);\n    }\n\n    /**\n     * Returns all registered problem matchers in the registry.\n     */\n    getAll(): NamedProblemMatcher[] {\n        const all: NamedProblemMatcher[] = [];\n        for (const matcherName of this.matchers.keys()) {\n            all.push(this.get(matcherName)!);\n        }\n        all.sort((one, other) => one.name.localeCompare(other.name));\n        return all;\n    }\n\n    /**\n     * Transforms the `ProblemMatcherContribution` to a `ProblemMatcher`\n     *\n     * @return the problem matcher\n     */\n    async getProblemMatcherFromContribution(matcher: ProblemMatcherContribution): Promise<ProblemMatcher> {\n        const { fileLocation, filePrefix } = this.getFileLocationKindAndPrefix(matcher);\n        const patterns: ProblemPattern[] = [];\n        if (matcher.pattern) {\n            if (typeof matcher.pattern === 'string') {\n                await this.problemPatternRegistry.onReady();\n                const registeredPattern = this.problemPatternRegistry.get(matcher.pattern);\n                if (Array.isArray(registeredPattern)) {\n                    patterns.push(...registeredPattern);\n                } else if (!!registeredPattern) {\n                    patterns.push(registeredPattern);\n                }\n            } else if (Array.isArray(matcher.pattern)) {\n                patterns.push(...matcher.pattern.map(p => ProblemPattern.fromProblemPatternContribution(p)));\n            } else {\n                patterns.push(ProblemPattern.fromProblemPatternContribution(matcher.pattern));\n            }\n        }\n        const problemMatcher = {\n            name: matcher.name,\n            label: matcher.label,\n            deprecated: matcher.deprecated,\n            owner: matcher.owner,\n            source: matcher.source,\n            applyTo: ApplyToKind.fromString(matcher.applyTo) || ApplyToKind.allDocuments,\n            fileLocation,\n            filePrefix,\n            pattern: patterns,\n            severity: Severity.fromValue(matcher.severity),\n            watching: WatchingMatcher.fromWatchingMatcherContribution(matcher.background || matcher.watching)\n        };\n        return problemMatcher;\n    }\n\n    private add(matcher: NamedProblemMatcher): Disposable {\n        this.matchers.set(matcher.name, matcher);\n        return Disposable.create(() => this.matchers.delete(matcher.name));\n    }\n\n    private getFileLocationKindAndPrefix(matcher: ProblemMatcherContribution): { fileLocation: FileLocationKind, filePrefix: string } {\n        let fileLocation = FileLocationKind.Relative;\n        let filePrefix = '${workspaceFolder}';\n        if (matcher.fileLocation !== undefined) {\n            if (Array.isArray(matcher.fileLocation)) {\n                if (matcher.fileLocation.length > 0) {\n                    const locationKind = FileLocationKind.fromString(matcher.fileLocation[0]);\n                    if (matcher.fileLocation.length === 1 && locationKind === FileLocationKind.Absolute) {\n                        fileLocation = locationKind;\n                    } else if (matcher.fileLocation.length === 2 && locationKind === FileLocationKind.Relative && matcher.fileLocation[1]) {\n                        fileLocation = locationKind;\n                        filePrefix = matcher.fileLocation[1];\n                    }\n                }\n            } else {\n                const locationKind = FileLocationKind.fromString(matcher.fileLocation);\n                if (locationKind) {\n                    fileLocation = locationKind;\n                    if (locationKind === FileLocationKind.Relative) {\n                        filePrefix = '${workspaceFolder}';\n                    }\n                }\n            }\n        }\n        return { fileLocation, filePrefix };\n    }\n\n    // copied from https://github.com/Microsoft/vscode/blob/1.33.1/src/vs/workbench/contrib/tasks/common/problemMatcher.ts\n    private fillDefaults(): void {\n        this.add({\n            name: 'msCompile',\n            label: 'Microsoft compiler problems',\n            owner: 'msCompile',\n            applyTo: ApplyToKind.allDocuments,\n            fileLocation: FileLocationKind.Absolute,\n            pattern: (this.problemPatternRegistry.get('msCompile'))!\n        });\n\n        this.add({\n            name: 'lessCompile',\n            label: 'Less problems',\n            deprecated: true,\n            owner: 'lessCompile',\n            source: 'less',\n            applyTo: ApplyToKind.allDocuments,\n            fileLocation: FileLocationKind.Absolute,\n            pattern: (this.problemPatternRegistry.get('lessCompile'))!,\n            severity: Severity.Error\n        });\n\n        this.add({\n            name: 'gulp-tsc',\n            label: 'Gulp TSC Problems',\n            owner: 'typescript',\n            source: 'ts',\n            applyTo: ApplyToKind.closedDocuments,\n            fileLocation: FileLocationKind.Relative,\n            filePrefix: '${workspaceFolder}',\n            pattern: (this.problemPatternRegistry.get('gulp-tsc'))!\n        });\n\n        this.add({\n            name: 'jshint',\n            label: 'JSHint problems',\n            owner: 'jshint',\n            source: 'jshint',\n            applyTo: ApplyToKind.allDocuments,\n            fileLocation: FileLocationKind.Absolute,\n            pattern: (this.problemPatternRegistry.get('jshint'))!\n        });\n\n        this.add({\n            name: 'jshint-stylish',\n            label: 'JSHint stylish problems',\n            owner: 'jshint',\n            source: 'jshint',\n            applyTo: ApplyToKind.allDocuments,\n            fileLocation: FileLocationKind.Absolute,\n            pattern: (this.problemPatternRegistry.get('jshint-stylish'))!\n        });\n\n        this.add({\n            name: 'eslint-compact',\n            label: 'ESLint compact problems',\n            owner: 'eslint',\n            source: 'eslint',\n            applyTo: ApplyToKind.allDocuments,\n            fileLocation: FileLocationKind.Absolute,\n            filePrefix: '${workspaceFolder}',\n            pattern: (this.problemPatternRegistry.get('eslint-compact'))!\n        });\n\n        this.add({\n            name: 'eslint-stylish',\n            label: 'ESLint stylish problems',\n            owner: 'eslint',\n            source: 'eslint',\n            applyTo: ApplyToKind.allDocuments,\n            fileLocation: FileLocationKind.Absolute,\n            pattern: (this.problemPatternRegistry.get('eslint-stylish'))!\n        });\n\n        this.add({\n            name: 'go',\n            label: 'Go problems',\n            owner: 'go',\n            source: 'go',\n            applyTo: ApplyToKind.allDocuments,\n            fileLocation: FileLocationKind.Relative,\n            filePrefix: '${workspaceFolder}',\n            pattern: (this.problemPatternRegistry.get('go'))!\n        });\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { injectable, postConstruct } from 'inversify';\nimport { NamedProblemPattern, ProblemLocationKind, ProblemPattern, ProblemPatternContribution } from '../common';\nimport { Disposable, DisposableCollection } from '@theia/core/lib/common/disposable';\n\n@injectable()\nexport class ProblemPatternRegistry {\n    private readonly patterns = new Map<string, NamedProblemPattern | NamedProblemPattern[]>();\n    private readyPromise: Promise<void>;\n\n    @postConstruct()\n    protected init(): void {\n        this.fillDefaults();\n        this.readyPromise = new Promise<void>((res, rej) => res(undefined));\n    }\n\n    onReady(): Promise<void> {\n        return this.readyPromise;\n    }\n\n    /**\n     * Add a problem pattern to the registry.\n     *\n     * @param definition the problem pattern to be added.\n     */\n    register(value: ProblemPatternContribution | ProblemPatternContribution[]): Disposable {\n        if (Array.isArray(value)) {\n            const toDispose = new DisposableCollection();\n            value.forEach(problemPatternContribution => toDispose.push(this.register(problemPatternContribution)));\n            return toDispose;\n        }\n        if (!value.name) {\n            console.error('Only named Problem Patterns can be registered.');\n            return Disposable.NULL;\n        }\n        const problemPattern = ProblemPattern.fromProblemPatternContribution(value);\n        return this.add(problemPattern.name!, problemPattern);\n    }\n\n    /**\n     * Finds the problem pattern(s) from the registry with the given name.\n     *\n     * @param key the name of the problem patterns\n     * @return a problem pattern or an array of the problem patterns associated with the name. If no problem patterns are found, `undefined` is returned.\n     */\n    get(key: string): undefined | NamedProblemPattern | NamedProblemPattern[] {\n        return this.patterns.get(key);\n    }\n\n    private add(key: string, value: ProblemPattern | ProblemPattern[]): Disposable {\n        let toAdd: NamedProblemPattern | NamedProblemPattern[];\n        if (Array.isArray(value)) {\n            toAdd = value.map(v => Object.assign(v, { name: key }));\n        } else {\n            toAdd = Object.assign(value, { name: key });\n        }\n        this.patterns.set(key, toAdd);\n        return Disposable.create(() => this.patterns.delete(key));\n    }\n\n    // copied from https://github.com/Microsoft/vscode/blob/1.33.1/src/vs/workbench/contrib/tasks/common/problemMatcher.ts\n    private fillDefaults(): void {\n        this.add('msCompile', {\n            regexp: /^(?:\\s+\\d+\\>)?([^\\s].*)\\((\\d+|\\d+,\\d+|\\d+,\\d+,\\d+,\\d+)\\)\\s*:\\s+(error|warning|info)\\s+(\\w{1,2}\\d+)\\s*:\\s*(.*)$/.source,\n            kind: ProblemLocationKind.Location,\n            file: 1,\n            location: 2,\n            severity: 3,\n            code: 4,\n            message: 5\n        });\n        this.add('gulp-tsc', {\n            regexp: /^([^\\s].*)\\((\\d+|\\d+,\\d+|\\d+,\\d+,\\d+,\\d+)\\):\\s+(\\d+)\\s+(.*)$/.source,\n            kind: ProblemLocationKind.Location,\n            file: 1,\n            location: 2,\n            code: 3,\n            message: 4\n        });\n        this.add('cpp', {\n            regexp: /^([^\\s].*)\\((\\d+|\\d+,\\d+|\\d+,\\d+,\\d+,\\d+)\\):\\s+(error|warning|info)\\s+(C\\d+)\\s*:\\s*(.*)$/.source,\n            kind: ProblemLocationKind.Location,\n            file: 1,\n            location: 2,\n            severity: 3,\n            code: 4,\n            message: 5\n        });\n        this.add('csc', {\n            regexp: /^([^\\s].*)\\((\\d+|\\d+,\\d+|\\d+,\\d+,\\d+,\\d+)\\):\\s+(error|warning|info)\\s+(CS\\d+)\\s*:\\s*(.*)$/.source,\n            kind: ProblemLocationKind.Location,\n            file: 1,\n            location: 2,\n            severity: 3,\n            code: 4,\n            message: 5\n        });\n        this.add('vb', {\n            regexp: /^([^\\s].*)\\((\\d+|\\d+,\\d+|\\d+,\\d+,\\d+,\\d+)\\):\\s+(error|warning|info)\\s+(BC\\d+)\\s*:\\s*(.*)$/.source,\n            kind: ProblemLocationKind.Location,\n            file: 1,\n            location: 2,\n            severity: 3,\n            code: 4,\n            message: 5\n        });\n        this.add('lessCompile', {\n            regexp: /^\\s*(.*) in file (.*) line no. (\\d+)$/.source,\n            kind: ProblemLocationKind.Location,\n            message: 1,\n            file: 2,\n            line: 3\n        });\n        this.add('jshint', {\n            regexp: /^(.*):\\s+line\\s+(\\d+),\\s+col\\s+(\\d+),\\s(.+?)(?:\\s+\\((\\w)(\\d+)\\))?$/.source,\n            kind: ProblemLocationKind.Location,\n            file: 1,\n            line: 2,\n            character: 3,\n            message: 4,\n            severity: 5,\n            code: 6\n        });\n        this.add('jshint-stylish', [\n            {\n                regexp: /^(.+)$/.source,\n                kind: ProblemLocationKind.Location,\n                file: 1\n            },\n            {\n                regexp: /^\\s+line\\s+(\\d+)\\s+col\\s+(\\d+)\\s+(.+?)(?:\\s+\\((\\w)(\\d+)\\))?$/.source,\n                line: 1,\n                character: 2,\n                message: 3,\n                severity: 4,\n                code: 5,\n                loop: true\n            }\n        ]);\n        this.add('eslint-compact', {\n            regexp: /^(.+):\\sline\\s(\\d+),\\scol\\s(\\d+),\\s(Error|Warning|Info)\\s-\\s(.+)\\s\\((.+)\\)$/.source,\n            file: 1,\n            kind: ProblemLocationKind.Location,\n            line: 2,\n            character: 3,\n            severity: 4,\n            message: 5,\n            code: 6\n        });\n        this.add('eslint-stylish', [\n            {\n                regexp: /^([^\\s].*)$/.source,\n                kind: ProblemLocationKind.Location,\n                file: 1\n            },\n            {\n                regexp: /^\\s+(\\d+):(\\d+)\\s+(error|warning|info)\\s+(.+?)(?:\\s\\s+(.*))?$/.source,\n                line: 1,\n                character: 2,\n                severity: 3,\n                message: 4,\n                code: 5,\n                loop: true\n            }\n        ]);\n        this.add('go', {\n            regexp: /^([^:]*: )?((.:)?[^:]*):(\\d+)(:(\\d+))?: (.*)$/.source,\n            kind: ProblemLocationKind.Location,\n            file: 2,\n            line: 4,\n            character: 6,\n            message: 7\n        });\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nexport * from './task-protocol';\nexport * from './task-watcher';\nexport * from './problem-matcher-protocol';\n","/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n// This file is inspired by VSCode https://github.com/Microsoft/vscode/blob/1.33.1/src/vs/workbench/contrib/tasks/common/problemMatcher.ts\n// 'problemMatcher.ts' copyright:\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Severity } from '@theia/core/lib/common/severity';\nimport { Diagnostic } from 'vscode-languageserver-types';\nimport vscodeURI from 'vscode-uri/lib/umd';\nimport { ProblemPatternContribution, WatchingMatcherContribution } from './task-protocol';\n\nexport enum ApplyToKind {\n    allDocuments,\n    openDocuments,\n    closedDocuments\n}\n\nexport namespace ApplyToKind {\n    export function fromString(value: string | undefined): ApplyToKind | undefined {\n        if (value) {\n            value = value.toLowerCase();\n            if (value === 'alldocuments') {\n                return ApplyToKind.allDocuments;\n            } else if (value === 'opendocuments') {\n                return ApplyToKind.openDocuments;\n            } else if (value === 'closeddocuments') {\n                return ApplyToKind.closedDocuments;\n            }\n        }\n        return undefined;\n    }\n}\n\nexport enum FileLocationKind {\n    Auto,\n    Relative,\n    Absolute\n}\n\nexport namespace FileLocationKind {\n    export function fromString(value: string): FileLocationKind | undefined {\n        value = value.toLowerCase();\n        if (value === 'absolute') {\n            return FileLocationKind.Absolute;\n        } else if (value === 'relative') {\n            return FileLocationKind.Relative;\n        } else {\n            return undefined;\n        }\n    }\n}\n\nexport interface WatchingPattern {\n    regexp: string;\n    file?: number;\n}\n\nexport interface WatchingMatcher {\n    // If set to true the background monitor is in active mode when the task starts.\n    // This is equals of issuing a line that matches the beginPattern\n    activeOnStart: boolean;\n    beginsPattern: WatchingPattern;\n    endsPattern: WatchingPattern;\n}\nexport namespace WatchingMatcher {\n    export function fromWatchingMatcherContribution(value: WatchingMatcherContribution | undefined): WatchingMatcher | undefined {\n        if (!value) {\n            return undefined;\n        }\n        return {\n            activeOnStart: !!value.activeOnStart,\n            beginsPattern: typeof value.beginsPattern === 'string' ? { regexp: value.beginsPattern } : value.beginsPattern,\n            endsPattern: typeof value.endsPattern === 'string' ? { regexp: value.endsPattern } : value.endsPattern\n        };\n    }\n}\n\nexport enum ProblemLocationKind {\n    File,\n    Location\n}\n\nexport namespace ProblemLocationKind {\n    export function fromString(value: string): ProblemLocationKind | undefined {\n        value = value.toLowerCase();\n        if (value === 'file') {\n            return ProblemLocationKind.File;\n        } else if (value === 'location') {\n            return ProblemLocationKind.Location;\n        } else {\n            return undefined;\n        }\n    }\n}\n\nexport interface ProblemMatcher {\n    deprecated?: boolean;\n\n    owner: string;\n    source?: string;\n    applyTo: ApplyToKind;\n    fileLocation: FileLocationKind;\n    filePrefix?: string;\n    pattern: ProblemPattern | ProblemPattern[];\n    severity?: Severity;\n    watching?: WatchingMatcher;\n    uriProvider?: (path: string) => vscodeURI;\n}\n\nexport interface NamedProblemMatcher extends ProblemMatcher {\n    name: string;\n    label: string;\n}\n\nexport namespace ProblemMatcher {\n    export function isWatchModeWatcher(matcher: ProblemMatcher): boolean {\n        return !!matcher.watching;\n    }\n}\n\nexport interface ProblemPattern {\n    name?: string;\n\n    regexp: string;\n\n    kind?: ProblemLocationKind;\n    file?: number;\n    message?: number;\n    location?: number;\n    line?: number;\n    character?: number;\n    endLine?: number;\n    endCharacter?: number;\n    code?: number;\n    severity?: number;\n    loop?: boolean;\n}\n\nexport interface NamedProblemPattern extends ProblemPattern {\n    name: string;\n}\n\nexport namespace ProblemPattern {\n    export function fromProblemPatternContribution(value: ProblemPatternContribution): ProblemPattern {\n        return {\n            name: value.name,\n            regexp: value.regexp,\n            kind: value.kind ? ProblemLocationKind.fromString(value.kind) : undefined,\n            file: value.file,\n            message: value.message,\n            location: value.location,\n            line: value.line,\n            character: value.column || value.character,\n            endLine: value.endLine,\n            endCharacter: value.endColumn || value.endCharacter,\n            code: value.code,\n            severity: value.severity,\n            loop: value.loop\n        };\n    }\n}\n\nexport interface ProblemMatch {\n    resource?: vscodeURI;\n    description: ProblemMatcher;\n}\n\nexport interface ProblemMatchData extends ProblemMatch {\n    marker: Diagnostic;\n}\nexport namespace ProblemMatchData {\n    export function is(data: ProblemMatch): data is ProblemMatchData {\n        return 'marker' in data;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { JsonRpcServer } from '@theia/core/lib/common/messaging/proxy-factory';\nimport { IJSONSchema } from '@theia/core/lib/common/json-schema';\nimport { ProblemMatcher, ProblemMatch, WatchingPattern } from './problem-matcher-protocol';\n\nexport const taskPath = '/services/task';\n\nexport const TaskServer = Symbol('TaskServer');\nexport const TaskClient = Symbol('TaskClient');\n\nexport interface TaskCustomization {\n    type: string;\n    group?: 'build' | 'test' | 'none' | { kind: 'build' | 'test' | 'none', isDefault: true };\n    problemMatcher?: string | ProblemMatcherContribution | (string | ProblemMatcherContribution)[];\n    // tslint:disable-next-line:no-any\n    [name: string]: any;\n}\nexport namespace TaskCustomization {\n    export function isBuildTask(task: TaskCustomization): boolean {\n        return task.group === 'build' || !!task.group && typeof task.group === 'object' && task.group.kind === 'build';\n    }\n\n    export function isDefaultBuildTask(task: TaskCustomization): boolean {\n        return !!task.group && typeof task.group === 'object' && task.group.kind === 'build' && task.group.isDefault;\n    }\n\n    export function isTestTask(task: TaskCustomization): boolean {\n        return task.group === 'test' || !!task.group && typeof task.group === 'object' && task.group.kind === 'test';\n    }\n\n    export function isDefaultTestTask(task: TaskCustomization): boolean {\n        return !!task.group && typeof task.group === 'object' && task.group.kind === 'test' && task.group.isDefault;\n    }\n}\n\nexport interface TaskConfiguration extends TaskCustomization {\n    /** A label that uniquely identifies a task configuration per source */\n    readonly label: string;\n    /**\n     * For a provided task, it is the string representation of the URI where the task is supposed to run from. It is `undefined` for global tasks.\n     * For a configured task, it is workspace URI that task belongs to.\n     * This field is not supposed to be used in `tasks.json`\n     */\n    readonly _scope: string | undefined;\n}\n\nexport interface ContributedTaskConfiguration extends TaskConfiguration {\n    /**\n     * Source of the task configuration.\n     * For a configured task, it is the name of the root folder, while for a provided task, it is the name of the provider.\n     * This field is not supposed to be used in `tasks.json`\n     */\n    readonly _source: string;\n}\n\n/** Runtime information about Task. */\nexport interface TaskInfo {\n    /** internal unique task id */\n    readonly taskId: number,\n    /** terminal id. Defined if task is run as a terminal process */\n    readonly terminalId?: number,\n    /** context that was passed as part of task creation, if any */\n    readonly ctx?: string,\n    /** task config used for launching a task */\n    readonly config: TaskConfiguration,\n    /** Additional properties specific for a particular Task Runner. */\n    // tslint:disable-next-line:no-any\n    readonly [key: string]: any;\n}\n\nexport interface TaskServer extends JsonRpcServer<TaskClient> {\n    /** Run a task. Optionally pass a context.  */\n    run(task: TaskConfiguration, ctx?: string, option?: RunTaskOption): Promise<TaskInfo>;\n    /** Kill a task, by id. */\n    kill(taskId: number): Promise<void>;\n    /**\n     * Returns a list of currently running tasks. If a context is provided,\n     * only the tasks started in that context will be provided. Using an\n     * undefined context matches all tasks, no matter the creation context.\n     */\n    getTasks(ctx?: string): Promise<TaskInfo[]>\n\n    /** removes the client that has disconnected */\n    disconnectClient(client: TaskClient): void;\n\n    /** Returns the list of default and registered task runners */\n    getRegisteredTaskTypes(): Promise<string[]>\n\n}\n\nexport interface TaskCustomizationData {\n    type: string;\n    problemMatcher?: ProblemMatcher[];\n    // tslint:disable-next-line:no-any\n    [name: string]: any;\n}\n\nexport interface RunTaskOption {\n    customization?: TaskCustomizationData;\n}\n\n/** Event sent when a task has concluded its execution */\nexport interface TaskExitedEvent {\n    readonly taskId: number;\n    readonly ctx?: string;\n\n    // Exactly one of code and signal will be set.\n    readonly code?: number;\n    readonly signal?: string;\n\n    readonly config?: TaskConfiguration;\n}\n\nexport interface TaskOutputEvent {\n    readonly taskId: number;\n    readonly ctx?: string;\n    readonly line: string;\n}\n\nexport interface TaskOutputProcessedEvent {\n    readonly taskId: number;\n    readonly ctx?: string;\n    readonly problems?: ProblemMatch[];\n}\n\nexport interface TaskClient {\n    onTaskExit(event: TaskExitedEvent): void;\n    onTaskCreated(event: TaskInfo): void;\n    onDidStartTaskProcess(event: TaskInfo): void;\n    onDidEndTaskProcess(event: TaskExitedEvent): void;\n    onDidProcessTaskOutput(event: TaskOutputProcessedEvent): void;\n}\n\nexport interface TaskDefinition {\n    taskType: string;\n    source: string;\n    properties: {\n        required: string[];\n        all: string[];\n        schema: IJSONSchema;\n    }\n}\n\nexport interface WatchingMatcherContribution {\n    // If set to true the background monitor is in active mode when the task starts.\n    // This is equals of issuing a line that matches the beginPattern\n    activeOnStart?: boolean;\n    beginsPattern: string | WatchingPattern;\n    endsPattern: string | WatchingPattern;\n}\n\nexport interface ProblemMatcherContribution {\n    name?: string;\n    label: string;\n    deprecated?: boolean;\n\n    owner: string;\n    source?: string;\n    applyTo?: string;\n    fileLocation?: 'absolute' | 'relative' | string[];\n    pattern: string | ProblemPatternContribution | ProblemPatternContribution[];\n    severity?: string;\n    watching?: WatchingMatcherContribution; // deprecated. Use `background`.\n    background?: WatchingMatcherContribution;\n}\n\nexport interface ProblemPatternContribution {\n    name?: string;\n    regexp: string;\n\n    kind?: string;\n    file?: number;\n    message?: number;\n    location?: number;\n    line?: number;\n    character?: number;\n    column?: number;\n    endLine?: number;\n    endCharacter?: number;\n    endColumn?: number;\n    code?: number;\n    severity?: number;\n    loop?: boolean;\n}\n","/********************************************************************************\n * Copyright (C) 2017 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { Emitter, Event } from '@theia/core/lib/common/event';\nimport { TaskClient, TaskExitedEvent, TaskInfo, TaskOutputProcessedEvent } from './task-protocol';\n\n@injectable()\nexport class TaskWatcher {\n\n    getTaskClient(): TaskClient {\n        const newTaskEmitter = this.onTaskCreatedEmitter;\n        const exitEmitter = this.onTaskExitEmitter;\n        const taskProcessStartedEmitter = this.onDidStartTaskProcessEmitter;\n        const taskProcessEndedEmitter = this.onDidEndTaskProcessEmitter;\n        const outputProcessedEmitter = this.onOutputProcessedEmitter;\n        return {\n            onTaskCreated(event: TaskInfo): void {\n                newTaskEmitter.fire(event);\n            },\n            onTaskExit(event: TaskExitedEvent): void {\n                exitEmitter.fire(event);\n            },\n            onDidStartTaskProcess(event: TaskInfo): void {\n                taskProcessStartedEmitter.fire(event);\n            },\n            onDidEndTaskProcess(event: TaskExitedEvent): void {\n                taskProcessEndedEmitter.fire(event);\n            },\n            onDidProcessTaskOutput(event: TaskOutputProcessedEvent): void {\n                outputProcessedEmitter.fire(event);\n            }\n        };\n    }\n\n    protected onTaskCreatedEmitter = new Emitter<TaskInfo>();\n    protected onTaskExitEmitter = new Emitter<TaskExitedEvent>();\n    protected onDidStartTaskProcessEmitter = new Emitter<TaskInfo>();\n    protected onDidEndTaskProcessEmitter = new Emitter<TaskExitedEvent>();\n    protected onOutputProcessedEmitter = new Emitter<TaskOutputProcessedEvent>();\n\n    get onTaskCreated(): Event<TaskInfo> {\n        return this.onTaskCreatedEmitter.event;\n    }\n    get onTaskExit(): Event<TaskExitedEvent> {\n        return this.onTaskExitEmitter.event;\n    }\n    get onDidStartTaskProcess(): Event<TaskInfo> {\n        return this.onDidStartTaskProcessEmitter.event;\n    }\n    get onDidEndTaskProcess(): Event<TaskExitedEvent> {\n        return this.onDidEndTaskProcessEmitter.event;\n    }\n    get onOutputProcessed(): Event<TaskOutputProcessedEvent> {\n        return this.onOutputProcessedEmitter.event;\n    }\n}\n"],"sourceRoot":""}