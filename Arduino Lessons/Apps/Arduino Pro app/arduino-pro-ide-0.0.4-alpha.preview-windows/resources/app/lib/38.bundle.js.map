{"version":3,"sources":["webpack:///./node_modules/@theia/monaco/src/browser/monaco-color-registry.ts","webpack:///./node_modules/@theia/monaco/src/browser/monaco-frontend-application-contribution.ts","webpack:///./node_modules/@theia/monaco/src/browser/monaco-frontend-module.ts","webpack:///./node_modules/@theia/monaco/src/browser/monaco-keybinding-contexts.ts","webpack:///./node_modules/@theia/monaco/src/browser/monaco-keybinding.ts","webpack:///./node_modules/@theia/monaco/src/browser/monaco-languages.ts","webpack:///./node_modules/@theia/monaco/src/browser/monaco-loader.ts","webpack:///./node_modules/@theia/monaco/src/browser/monaco-mime-service.ts","webpack:///./node_modules/@theia/monaco/src/browser/monaco-outline-contribution.ts","webpack:///./node_modules/@theia/monaco/src/browser/monaco-outline-decorator.ts","webpack:///./node_modules/@theia/monaco/src/browser/monaco-semantic-highlighting-service.ts","webpack:///./node_modules/@theia/monaco/src/electron-browser/monaco-electron-module.ts","webpack:///./node_modules/@theia/monaco/src/browser/style/index.css?e8dd","webpack:///./node_modules/@theia/monaco/src/browser/style/symbol-icons.css?eb15","webpack:///./node_modules/@theia/monaco/src/browser/style/symbol-sprite.svg","webpack:///./node_modules/@theia/outline-view/src/browser/outline-decorator-service.ts","webpack:///./node_modules/@theia/outline-view/src/browser/outline-view-service.ts","webpack:///./node_modules/@theia/monaco/src/browser/style/index.css","webpack:///./node_modules/@theia/monaco/src/browser/style/symbol-icons.css"],"names":[],"mappings":"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","file":"38.bundle.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { ColorRegistry, ColorOptions } from '@theia/core/lib/browser/color-registry';\nimport { Disposable } from '@theia/core/lib/common/disposable';\n\n@injectable()\nexport class MonacoColorRegistry implements ColorRegistry {\n\n    protected readonly monacoThemeService = monaco.services.StaticServices.standaloneThemeService.get();\n    protected readonly monacoColorRegistry = monaco.color.getColorRegistry();\n\n    *getColors(): IterableIterator<string> {\n        for (const { id } of this.monacoColorRegistry.getColors()) {\n            yield id;\n        }\n    }\n\n    getCurrentColor(id: string): string | undefined {\n        const color = this.monacoThemeService.getTheme().getColor(id);\n        return color && color.toString();\n    }\n\n    register(id: string, options: ColorOptions): Disposable {\n        const identifier = this.monacoColorRegistry.registerColor(id, options.defaults, options.description);\n        return Disposable.create(() => this.monacoColorRegistry.deregisterColor(identifier));\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { FrontendApplicationContribution, PreferenceSchemaProvider } from '@theia/core/lib/browser';\nimport { MonacoSnippetSuggestProvider } from './monaco-snippet-suggest-provider';\n\n@injectable()\nexport class MonacoFrontendApplicationContribution implements FrontendApplicationContribution {\n\n    @inject(MonacoSnippetSuggestProvider)\n    protected readonly snippetSuggestProvider: MonacoSnippetSuggestProvider;\n\n    @inject(PreferenceSchemaProvider)\n    protected readonly preferenceSchema: PreferenceSchemaProvider;\n\n    async initialize(): Promise<void> {\n        monaco.suggest.setSnippetSuggestSupport(this.snippetSuggestProvider);\n\n        for (const language of monaco.languages.getLanguages()) {\n            this.preferenceSchema.registerOverrideIdentifier(language.id);\n        }\n        const registerLanguage = monaco.languages.register.bind(monaco.languages);\n        monaco.languages.register = language => {\n            // first register override identifier, because monaco will immediately update already opened documents and then initialize with bad preferences.\n            this.preferenceSchema.registerOverrideIdentifier(language.id);\n            registerLanguage(language);\n        };\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport '../../src/browser/style/index.css';\nimport '../../src/browser/style/symbol-sprite.svg';\nimport '../../src/browser/style/symbol-icons.css';\n\nimport debounce = require('lodash.debounce');\nimport { ContainerModule, decorate, injectable, interfaces } from 'inversify';\nimport { MenuContribution, CommandContribution } from '@theia/core/lib/common';\nimport { PreferenceScope } from '@theia/core/lib/common/preferences/preference-scope';\nimport {\n    QuickOpenService, FrontendApplicationContribution, KeybindingContribution,\n    PreferenceService, PreferenceSchemaProvider, createPreferenceProxy\n} from '@theia/core/lib/browser';\nimport { Languages, Workspace } from '@theia/languages/lib/browser';\nimport { TextEditorProvider, DiffNavigatorProvider } from '@theia/editor/lib/browser';\nimport { StrictEditorTextFocusContext } from '@theia/editor/lib/browser/editor-keybinding-contexts';\nimport { MonacoToProtocolConverter, ProtocolToMonacoConverter } from 'monaco-languageclient';\nimport { MonacoEditorProvider } from './monaco-editor-provider';\nimport { MonacoEditorMenuContribution } from './monaco-menu';\nimport { MonacoEditorCommandHandlers } from './monaco-command';\nimport { MonacoKeybindingContribution } from './monaco-keybinding';\nimport { MonacoLanguages } from './monaco-languages';\nimport { MonacoWorkspace } from './monaco-workspace';\nimport { MonacoConfigurations } from './monaco-configurations';\nimport { MonacoEditorService } from './monaco-editor-service';\nimport { MonacoTextModelService } from './monaco-text-model-service';\nimport { MonacoContextMenuService } from './monaco-context-menu';\nimport { MonacoOutlineContribution } from './monaco-outline-contribution';\nimport { MonacoStatusBarContribution } from './monaco-status-bar-contribution';\nimport { MonacoCommandService, MonacoCommandServiceFactory } from './monaco-command-service';\nimport { MonacoCommandRegistry } from './monaco-command-registry';\nimport { MonacoQuickOpenService } from './monaco-quick-open-service';\nimport { MonacoDiffNavigatorFactory } from './monaco-diff-navigator-factory';\nimport { MonacoStrictEditorTextFocusContext } from './monaco-keybinding-contexts';\nimport { MonacoFrontendApplicationContribution } from './monaco-frontend-application-contribution';\nimport MonacoTextmateModuleBinder from './textmate/monaco-textmate-frontend-bindings';\nimport { MonacoSemanticHighlightingService } from './monaco-semantic-highlighting-service';\nimport { SemanticHighlightingService } from '@theia/editor/lib/browser/semantic-highlight/semantic-highlighting-service';\nimport { MonacoBulkEditService } from './monaco-bulk-edit-service';\nimport { MonacoOutlineDecorator } from './monaco-outline-decorator';\nimport { OutlineTreeDecorator } from '@theia/outline-view/lib/browser/outline-decorator-service';\nimport { MonacoSnippetSuggestProvider } from './monaco-snippet-suggest-provider';\nimport { ContextKeyService } from '@theia/core/lib/browser/context-key-service';\nimport { MonacoContextKeyService } from './monaco-context-key-service';\nimport { MonacoMimeService } from './monaco-mime-service';\nimport { MimeService } from '@theia/core/lib/browser/mime-service';\nimport { MonacoEditorServices } from './monaco-editor';\nimport { MonacoColorRegistry } from './monaco-color-registry';\nimport { ColorRegistry } from '@theia/core/lib/browser/color-registry';\n\ndecorate(injectable(), MonacoToProtocolConverter);\ndecorate(injectable(), ProtocolToMonacoConverter);\ndecorate(injectable(), monaco.contextKeyService.ContextKeyService);\n\nexport default new ContainerModule((bind, unbind, isBound, rebind) => {\n    bind(MonacoContextKeyService).toSelf().inSingletonScope();\n    rebind(ContextKeyService).toService(MonacoContextKeyService);\n\n    bind(MonacoSnippetSuggestProvider).toSelf().inSingletonScope();\n    bind(FrontendApplicationContribution).to(MonacoFrontendApplicationContribution).inSingletonScope();\n\n    bind(MonacoToProtocolConverter).toSelf().inSingletonScope();\n    bind(ProtocolToMonacoConverter).toSelf().inSingletonScope();\n\n    bind(MonacoLanguages).toSelf().inSingletonScope();\n    bind(Languages).toService(MonacoLanguages);\n\n    bind(MonacoConfigurations).toSelf().inSingletonScope();\n    bind(MonacoWorkspace).toSelf().inSingletonScope();\n    bind(Workspace).toService(MonacoWorkspace);\n\n    bind(MonacoConfigurationService).toDynamicValue(({ container }) =>\n        createMonacoConfigurationService(container)\n    ).inSingletonScope();\n    bind(monaco.contextKeyService.ContextKeyService).toDynamicValue(({ container }) =>\n        new monaco.contextKeyService.ContextKeyService(container.get(MonacoConfigurationService))\n    ).inSingletonScope();\n    bind(MonacoBulkEditService).toSelf().inSingletonScope();\n    bind(MonacoEditorService).toSelf().inSingletonScope();\n    bind(MonacoTextModelService).toSelf().inSingletonScope();\n    bind(MonacoContextMenuService).toSelf().inSingletonScope();\n    bind(MonacoEditorServices).toSelf().inSingletonScope();\n    bind(MonacoEditorProvider).toSelf().inSingletonScope();\n    bind(MonacoCommandService).toSelf().inTransientScope();\n    bind(MonacoCommandServiceFactory).toAutoFactory(MonacoCommandService);\n    bind(TextEditorProvider).toProvider(context =>\n        uri => context.container.get(MonacoEditorProvider).get(uri)\n    );\n    bind(MonacoDiffNavigatorFactory).toSelf().inSingletonScope();\n    bind(DiffNavigatorProvider).toFactory(context =>\n        editor => context.container.get(MonacoEditorProvider).getDiffNavigator(editor)\n    );\n\n    bind(MonacoOutlineContribution).toSelf().inSingletonScope();\n    bind(FrontendApplicationContribution).toService(MonacoOutlineContribution);\n\n    bind(MonacoStatusBarContribution).toSelf().inSingletonScope();\n    bind(FrontendApplicationContribution).toService(MonacoStatusBarContribution);\n\n    bind(MonacoCommandRegistry).toSelf().inSingletonScope();\n    bind(CommandContribution).to(MonacoEditorCommandHandlers).inSingletonScope();\n    bind(MenuContribution).to(MonacoEditorMenuContribution).inSingletonScope();\n    bind(KeybindingContribution).to(MonacoKeybindingContribution).inSingletonScope();\n    rebind(StrictEditorTextFocusContext).to(MonacoStrictEditorTextFocusContext).inSingletonScope();\n\n    bind(MonacoQuickOpenService).toSelf().inSingletonScope();\n    rebind(QuickOpenService).toService(MonacoQuickOpenService);\n\n    MonacoTextmateModuleBinder(bind, unbind, isBound, rebind);\n\n    bind(MonacoSemanticHighlightingService).toSelf().inSingletonScope();\n    rebind(SemanticHighlightingService).to(MonacoSemanticHighlightingService).inSingletonScope();\n\n    bind(MonacoOutlineDecorator).toSelf().inSingletonScope();\n    bind(OutlineTreeDecorator).toService(MonacoOutlineDecorator);\n\n    bind(MonacoMimeService).toSelf().inSingletonScope();\n    rebind(MimeService).toService(MonacoMimeService);\n\n    bind(MonacoColorRegistry).toSelf().inSingletonScope();\n    rebind(ColorRegistry).toService(MonacoColorRegistry);\n});\n\nexport const MonacoConfigurationService = Symbol('MonacoConfigurationService');\nexport function createMonacoConfigurationService(container: interfaces.Container): monaco.services.IConfigurationService {\n    const configurations = container.get(MonacoConfigurations);\n    const preferences = container.get<PreferenceService>(PreferenceService);\n    const preferenceSchemaProvider = container.get<PreferenceSchemaProvider>(PreferenceSchemaProvider);\n    const service = monaco.services.StaticServices.configurationService.get();\n    const _configuration = service._configuration;\n\n    _configuration.getValue = (section, overrides, workspace) => {\n        const overrideIdentifier = overrides && 'overrideIdentifier' in overrides && overrides['overrideIdentifier'] as string || undefined;\n        const resourceUri = overrides && 'resource' in overrides && overrides['resource'].toString();\n        // tslint:disable-next-line:no-any\n        const proxy = createPreferenceProxy<{ [key: string]: any }>(preferences, preferenceSchemaProvider.getCombinedSchema(), {\n            resourceUri, overrideIdentifier, style: 'both'\n        });\n        if (section) {\n            return proxy[section];\n        }\n        return proxy;\n    };\n\n    const initFromConfiguration = debounce(() => {\n        const event = new monaco.services.ConfigurationChangeEvent();\n        event._source = 6 /* DEFAULT */;\n        service._onDidChangeConfiguration.fire(event);\n    });\n    preferences.onPreferenceChanged(e => {\n        if (e.scope === PreferenceScope.Default) {\n            initFromConfiguration();\n        }\n    });\n    configurations.onDidChangeConfiguration(e => {\n        if (e.affectedSections) {\n            const event = new monaco.services.ConfigurationChangeEvent();\n            event.change(e.affectedSections);\n            service._onDidChangeConfiguration.fire(event);\n        }\n    });\n\n    return service;\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { EditorWidget } from '@theia/editor/lib/browser/editor-widget';\nimport { StrictEditorTextFocusContext } from '@theia/editor/lib/browser/editor-keybinding-contexts';\nimport { MonacoEditor } from './monaco-editor';\n\n/**\n * Besides checking whether this editor is the currently active one and has the focus, it also checks the followings:\n *  - the suggest widget is visible\n *  - the find (and replace) widget is visible.\n *  - the rename input widget (which we use for refactoring and not find and replace) is visible.\n *\n * If any of the above-mentioned additional checks evaluates to `true` the `canHandle` will evaluate to `false`.\n *\n * See: https://github.com/eamodio/vscode-gitlens/blob/57226d54d1e929be04b02ee31ca294c50305481b/package.json#L2857\n */\n@injectable()\nexport class MonacoStrictEditorTextFocusContext extends StrictEditorTextFocusContext {\n\n    protected canHandle(widget: EditorWidget): boolean {\n        const { editor } = widget;\n        if (editor instanceof MonacoEditor) {\n            return editor.isFocused({ strict: true });\n        }\n        return super.canHandle(widget);\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { KeybindingContribution, KeybindingRegistry, Key, KeyCode, Keystroke, KeyModifier, KeySequence } from '@theia/core/lib/browser';\nimport { EditorKeybindingContexts } from '@theia/editor/lib/browser';\nimport { MonacoCommands } from './monaco-command';\nimport { MonacoCommandRegistry } from './monaco-command-registry';\nimport { KEY_CODE_MAP } from './monaco-keycode-map';\nimport { isOSX, environment } from '@theia/core';\n\nfunction monaco2BrowserKeyCode(keyCode: monaco.KeyCode): number {\n    for (let i = 0; i < KEY_CODE_MAP.length; i++) {\n        if (KEY_CODE_MAP[i] === keyCode) {\n            return i;\n        }\n    }\n    return -1;\n}\n\n@injectable()\nexport class MonacoKeybindingContribution implements KeybindingContribution {\n\n    @inject(MonacoCommandRegistry)\n    protected readonly commands: MonacoCommandRegistry;\n\n    registerKeybindings(registry: KeybindingRegistry): void {\n        const defaultKeybindings = monaco.keybindings.KeybindingsRegistry.getDefaultKeybindings();\n        // register in reverse order to align with Monaco dispatch logic:\n        // https://github.com/TypeFox/vscode/blob/70b8db24a37fafc77247de7f7cb5bb0195120ed0/src/vs/platform/keybinding/common/keybindingResolver.ts#L302\n        for (let i = defaultKeybindings.length - 1; i >= 0; i--) {\n            const item = defaultKeybindings[i];\n            const command = this.commands.validate(item.command);\n            if (command) {\n                const raw = item.keybinding;\n                const when = item.when && item.when.serialize();\n                let keybinding;\n                if (item.command === MonacoCommands.GO_TO_DEFINITION && !environment.electron.is()) {\n                    keybinding = 'ctrlcmd+f11';\n                } else {\n                    keybinding = raw instanceof monaco.keybindings.SimpleKeybinding\n                        ? this.keyCode(raw).toString()\n                        : this.keySequence(raw as monaco.keybindings.ChordKeybinding).join(' ');\n                }\n                registry.registerKeybinding({ command, keybinding, when });\n            }\n        }\n\n        // `Select All` is not an editor action just like everything else.\n        const selectAllCommand = this.commands.validate(MonacoCommands.SELECTION_SELECT_ALL);\n        if (selectAllCommand) {\n            registry.registerKeybinding({\n                command: selectAllCommand,\n                keybinding: 'ctrlcmd+a',\n                context: EditorKeybindingContexts.editorTextFocus\n            });\n        }\n    }\n\n    protected keyCode(keybinding: monaco.keybindings.SimpleKeybinding): KeyCode {\n        const keyCode = keybinding.keyCode;\n        const sequence: Keystroke = {\n            first: Key.getKey(monaco2BrowserKeyCode(keyCode & 0xff)),\n            modifiers: []\n        };\n        if (keybinding.ctrlKey) {\n            if (isOSX) {\n                sequence.modifiers!.push(KeyModifier.MacCtrl);\n            } else {\n                sequence.modifiers!.push(KeyModifier.CtrlCmd);\n            }\n        }\n        if (keybinding.shiftKey) {\n            sequence.modifiers!.push(KeyModifier.Shift);\n        }\n        if (keybinding.altKey) {\n            sequence.modifiers!.push(KeyModifier.Alt);\n        }\n        if (keybinding.metaKey && sequence.modifiers!.indexOf(KeyModifier.CtrlCmd) === -1) {\n            sequence.modifiers!.push(KeyModifier.CtrlCmd);\n        }\n        return KeyCode.createKeyCode(sequence);\n    }\n\n    protected keySequence(keybinding: monaco.keybindings.ChordKeybinding): KeySequence {\n        return keybinding.parts.map(part => this.keyCode(part));\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject, decorate } from 'inversify';\nimport {\n    MonacoLanguages as BaseMonacoLanguages, ProtocolToMonacoConverter,\n    MonacoToProtocolConverter,\n    DocumentSelector,\n    SignatureHelpProvider,\n    MonacoModelIdentifier,\n    CodeActionProvider,\n    CodeLensProvider\n} from 'monaco-languageclient';\nimport { Languages, Diagnostic, DiagnosticCollection, Language, WorkspaceSymbolProvider } from '@theia/languages/lib/browser';\nimport { ProblemManager } from '@theia/markers/lib/browser/problem/problem-manager';\nimport URI from '@theia/core/lib/common/uri';\nimport { Mutable } from '@theia/core/lib/common/types';\nimport { Disposable } from '@theia/core/lib/common/disposable';\nimport { MonacoDiagnosticCollection } from 'monaco-languageclient/lib/monaco-diagnostic-collection';\n\ndecorate(injectable(), BaseMonacoLanguages);\ndecorate(inject(ProtocolToMonacoConverter), BaseMonacoLanguages, 0);\ndecorate(inject(MonacoToProtocolConverter), BaseMonacoLanguages, 1);\n\n@injectable()\nexport class MonacoLanguages extends BaseMonacoLanguages implements Languages {\n\n    readonly workspaceSymbolProviders: WorkspaceSymbolProvider[] = [];\n\n    protected readonly makers = new Map<string, MonacoDiagnosticCollection>();\n\n    constructor(\n        @inject(ProtocolToMonacoConverter) p2m: ProtocolToMonacoConverter,\n        @inject(MonacoToProtocolConverter) m2p: MonacoToProtocolConverter,\n        @inject(ProblemManager) protected readonly problemManager: ProblemManager\n    ) {\n        super(p2m, m2p);\n        for (const uri of this.problemManager.getUris()) {\n            this.updateMarkers(new URI(uri));\n        }\n        this.problemManager.onDidChangeMarkers(uri => this.updateMarkers(uri));\n    }\n\n    protected updateMarkers(uri: URI): void {\n        const uriString = uri.toString();\n        const owners = new Map<string, Diagnostic[]>();\n        for (const marker of this.problemManager.findMarkers({ uri })) {\n            const diagnostics = owners.get(marker.owner) || [];\n            diagnostics.push(marker.data);\n            owners.set(marker.owner, diagnostics);\n        }\n        const toClean = new Set<string>(this.makers.keys());\n        for (const [owner, diagnostics] of owners) {\n            toClean.delete(owner);\n            const collection = this.makers.get(owner) || new MonacoDiagnosticCollection(owner, this.p2m);\n            collection.set(uriString, diagnostics);\n            this.makers.set(owner, collection);\n        }\n        for (const owner of toClean) {\n            const collection = this.makers.get(owner);\n            if (collection) {\n                collection.set(uriString, []);\n            }\n        }\n    }\n\n    createDiagnosticCollection(name?: string): DiagnosticCollection {\n        const owner = name || 'default';\n        const uris: string[] = [];\n        return {\n            set: (uri, diagnostics) => {\n                this.problemManager.setMarkers(new URI(uri), owner, diagnostics);\n                uris.push(uri);\n            },\n            dispose: () => {\n                for (const uri of uris) {\n                    this.problemManager.setMarkers(new URI(uri), owner, []);\n                }\n            }\n        };\n    }\n\n    registerWorkspaceSymbolProvider(provider: WorkspaceSymbolProvider): Disposable {\n        this.workspaceSymbolProviders.push(provider);\n        return Disposable.create(() => {\n            const index = this.workspaceSymbolProviders.indexOf(provider);\n            if (index !== -1) {\n                this.workspaceSymbolProviders.splice(index, 1);\n            }\n        });\n    }\n\n    get languages(): Language[] {\n        return [...this.mergeLanguages(monaco.languages.getLanguages()).values()];\n    }\n\n    getLanguage(languageId: string): Language | undefined {\n        return this.mergeLanguages(monaco.languages.getLanguages().filter(language => language.id === languageId)).get(languageId);\n    }\n\n    protected mergeLanguages(registered: monaco.languages.ILanguageExtensionPoint[]): Map<string, Mutable<Language>> {\n        const languages = new Map<string, Mutable<Language>>();\n        for (const { id, aliases, extensions, filenames } of registered) {\n            const merged = languages.get(id) || {\n                id,\n                name: '',\n                extensions: new Set(),\n                filenames: new Set()\n            };\n            if (!merged.name && aliases && aliases.length) {\n                merged.name = aliases[0];\n            }\n            if (extensions && extensions.length) {\n                for (const extension of extensions) {\n                    merged.extensions.add(extension);\n                }\n            }\n            if (filenames && filenames.length) {\n                for (const filename of filenames) {\n                    merged.filenames.add(filename);\n                }\n            }\n            languages.set(id, merged);\n        }\n        for (const [id, language] of languages) {\n            if (!language.name) {\n                language.name = id;\n            }\n        }\n        return languages;\n    }\n\n    protected createSignatureHelpProvider(selector: DocumentSelector, provider: SignatureHelpProvider, ...triggerCharacters: string[]): monaco.languages.SignatureHelpProvider {\n        const signatureHelpTriggerCharacters = [...(provider.triggerCharacters || triggerCharacters || [])];\n        const signatureHelpRetriggerCharacters = [...(provider.retriggerCharacters || [])];\n        return {\n            signatureHelpTriggerCharacters,\n            signatureHelpRetriggerCharacters,\n            provideSignatureHelp: async (model, position, token) => {\n                if (!this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return undefined;\n                }\n                const params = this.m2p.asTextDocumentPositionParams(model, position);\n                const help = await provider.provideSignatureHelp(params, token, undefined! /* not used by LC */);\n                if (!help) {\n                    return undefined;\n                }\n                return {\n                    value: this.p2m.asSignatureHelp(help),\n                    dispose: () => { }\n                };\n            }\n        };\n    }\n\n    protected createCodeActionProvider(selector: DocumentSelector, provider: CodeActionProvider): monaco.languages.CodeActionProvider {\n        return {\n            provideCodeActions: async (model, range, context, token) => {\n                if (!this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return undefined!;\n                }\n                const params = this.m2p.asCodeActionParams(model, range, context);\n                const actions = await provider.provideCodeActions(params, token);\n                if (!actions) {\n                    return undefined!;\n                }\n                return {\n                    actions: this.p2m.asCodeActions(actions),\n                    dispose: () => { }\n                };\n            }\n        };\n    }\n\n    protected createCodeLensProvider(selector: DocumentSelector, provider: CodeLensProvider): monaco.languages.CodeLensProvider {\n        return {\n            provideCodeLenses: async (model, token) => {\n                if (!this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return undefined;\n                }\n                const params = this.m2p.asCodeLensParams(model);\n                const lenses = await provider.provideCodeLenses(params, token);\n                if (!lenses) {\n                    return undefined;\n                }\n                return {\n                    lenses: this.p2m.asCodeLenses(lenses),\n                    dispose: () => { }\n                };\n            },\n            resolveCodeLens: provider.resolveCodeLens ? async (model, codeLens, token) => {\n                if (!this.matchModel(selector, MonacoModelIdentifier.fromModel(model))) {\n                    return codeLens;\n                }\n                const protocolCodeLens = this.m2p.asCodeLens(codeLens);\n                const result = await provider.resolveCodeLens!(protocolCodeLens, token);\n                if (result) {\n                    const resolvedCodeLens = this.p2m.asCodeLens(result);\n                    Object.assign(codeLens, resolvedCodeLens);\n                }\n                return codeLens;\n            } : ((_, codeLens, __) => codeLens)\n        };\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n// tslint:disable:no-any\n\nexport function loadVsRequire(context: any): Promise<any> {\n    // Monaco uses a custom amd loader that over-rides node's require.\n    // Keep a reference to an original require so we can restore it after executing the amd loader file.\n    const originalRequire = context.require;\n\n    return new Promise<any>(resolve =>\n        window.addEventListener('load', () => {\n            const vsLoader = document.createElement('script');\n            vsLoader.type = 'text/javascript';\n            vsLoader.src = './vs/loader.js';\n            vsLoader.charset = 'utf-8';\n            vsLoader.addEventListener('load', () => {\n                // Save Monaco's amd require and restore the original require\n                const amdRequire = context.require;\n                if (originalRequire) {\n                    context.require = originalRequire;\n                }\n                resolve(amdRequire);\n            });\n            document.body.appendChild(vsLoader);\n        }, { once: true })\n    );\n}\n\nexport function loadMonaco(vsRequire: any): Promise<void> {\n    return new Promise<void>(resolve => {\n        vsRequire(['vs/editor/editor.main'], () => {\n            vsRequire([\n                'vs/language/css/monaco.contribution',\n                'vs/language/html/monaco.contribution',\n                'vs/platform/commands/common/commands',\n                'vs/platform/actions/common/actions',\n                'vs/platform/keybinding/common/keybindingsRegistry',\n                'vs/platform/keybinding/common/keybindingResolver',\n                'vs/platform/keybinding/common/usLayoutResolvedKeybinding',\n                'vs/base/common/keybindingLabels',\n                'vs/base/common/keyCodes',\n                'vs/base/common/mime',\n                'vs/editor/browser/editorExtensions',\n                'vs/editor/standalone/browser/simpleServices',\n                'vs/editor/standalone/browser/standaloneServices',\n                'vs/base/parts/quickopen/browser/quickOpenWidget',\n                'vs/base/parts/quickopen/browser/quickOpenModel',\n                'vs/base/common/filters',\n                'vs/platform/theme/common/styler',\n                'vs/platform/theme/common/colorRegistry',\n                'vs/base/common/platform',\n                'vs/editor/common/modes',\n                'vs/editor/contrib/suggest/suggest',\n                'vs/editor/contrib/snippet/snippetParser',\n                'vs/platform/configuration/common/configuration',\n                'vs/platform/configuration/common/configurationModels',\n                'vs/editor/browser/services/codeEditorService',\n                'vs/editor/browser/services/codeEditorServiceImpl',\n                'vs/platform/markers/common/markerService',\n                'vs/platform/contextkey/common/contextkey',\n                'vs/platform/contextkey/browser/contextKeyService',\n                'vs/base/common/errors'\n            ], (css: any, html: any, commands: any, actions: any,\n                keybindingsRegistry: any, keybindingResolver: any, resolvedKeybinding: any, keybindingLabels: any,\n                keyCodes: any, mime: any, editorExtensions: any, simpleServices: any, standaloneServices: any, quickOpenWidget: any, quickOpenModel: any,\n                filters: any, styler: any, colorRegistry: any,\n                platform: any, modes: any, suggest: any, snippetParser: any,\n                configuration: any, configurationModels: any,\n                codeEditorService: any, codeEditorServiceImpl: any,\n                markerService: any,\n                contextKey: any, contextKeyService: any,\n                error: any) => {\n                    const global: any = self;\n                    global.monaco.commands = commands;\n                    global.monaco.actions = actions;\n                    global.monaco.keybindings = Object.assign({}, keybindingsRegistry, keybindingResolver, resolvedKeybinding, keybindingLabels, keyCodes);\n                    global.monaco.services = Object.assign({}, simpleServices, standaloneServices, configuration, configurationModels,\n                        codeEditorService, codeEditorServiceImpl, markerService);\n                    global.monaco.quickOpen = Object.assign({}, quickOpenWidget, quickOpenModel);\n                    global.monaco.filters = filters;\n                    global.monaco.theme = styler;\n                    global.monaco.color = colorRegistry;\n                    global.monaco.platform = platform;\n                    global.monaco.editorExtensions = editorExtensions;\n                    global.monaco.modes = modes;\n                    global.monaco.suggest = suggest;\n                    global.monaco.snippetParser = snippetParser;\n                    global.monaco.contextkey = contextKey;\n                    global.monaco.contextKeyService = contextKeyService;\n                    global.monaco.mime = mime;\n                    global.monaco.error = error;\n                    resolve();\n                });\n        });\n    });\n}\n","/********************************************************************************\n * Copyright (C) 2019 Red Hat, Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { MimeAssociation, MimeService } from '@theia/core/lib/browser/mime-service';\nimport { injectable } from 'inversify';\n\n@injectable()\nexport class MonacoMimeService extends MimeService {\n\n    setAssociations(associations: MimeAssociation[]): void {\n        monaco.mime.clearTextMimes(true);\n\n        for (const association of associations) {\n            const mimetype = this.getMimeForMode(association.id) || `text/x-${association.id}`;\n            monaco.mime.registerTextMime({ id: association.id, mime: mimetype, filepattern: association.filepattern, userConfigured: true }, false);\n        }\n    }\n\n    protected getMimeForMode(langId: string): string | undefined {\n        for (const language of monaco.languages.getLanguages()) {\n            if (language.id === langId && language.mimetypes) {\n                return language.mimetypes[0];\n            }\n        }\n\n        return undefined;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport DocumentSymbol = monaco.languages.DocumentSymbol;\nimport SymbolKind = monaco.languages.SymbolKind;\nimport { FrontendApplicationContribution, FrontendApplication, TreeNode } from '@theia/core/lib/browser';\nimport { Range, EditorManager, EditorOpenerOptions } from '@theia/editor/lib/browser';\nimport DocumentSymbolProviderRegistry = monaco.modes.DocumentSymbolProviderRegistry;\nimport CancellationTokenSource = monaco.CancellationTokenSource;\nimport CancellationToken = monaco.CancellationToken;\nimport { DisposableCollection, Disposable } from '@theia/core';\nimport { OutlineViewService } from '@theia/outline-view/lib/browser/outline-view-service';\nimport { OutlineSymbolInformationNode } from '@theia/outline-view/lib/browser/outline-view-widget';\nimport URI from '@theia/core/lib/common/uri';\nimport { MonacoEditor } from './monaco-editor';\n\nimport debounce = require('lodash.debounce');\n\n@injectable()\nexport class MonacoOutlineContribution implements FrontendApplicationContribution {\n\n    protected readonly toDisposeOnClose = new DisposableCollection();\n    protected readonly toDisposeOnEditor = new DisposableCollection();\n    protected roots: MonacoOutlineSymbolInformationNode[] | undefined;\n    protected canUpdateOutline: boolean = true;\n\n    @inject(OutlineViewService) protected readonly outlineViewService: OutlineViewService;\n    @inject(EditorManager) protected readonly editorManager: EditorManager;\n\n    onStart(app: FrontendApplication): void {\n        this.outlineViewService.onDidChangeOpenState(async open => {\n            if (open) {\n                this.toDisposeOnClose.push(this.toDisposeOnEditor);\n                this.toDisposeOnClose.push(DocumentSymbolProviderRegistry.onDidChange(\n                    debounce(() => this.updateOutline())\n                ));\n                this.toDisposeOnClose.push(this.editorManager.onCurrentEditorChanged(\n                    debounce(() => this.handleCurrentEditorChanged(), 50)\n                ));\n                this.handleCurrentEditorChanged();\n            } else {\n                this.toDisposeOnClose.dispose();\n            }\n        });\n        this.outlineViewService.onDidSelect(async node => {\n            if (MonacoOutlineSymbolInformationNode.is(node) && node.parent) {\n                const options: EditorOpenerOptions = {\n                    mode: 'reveal',\n                    selection: node.range\n                };\n                await this.selectInEditor(node, options);\n            }\n        });\n        this.outlineViewService.onDidOpen(async node => {\n            if (MonacoOutlineSymbolInformationNode.is(node)) {\n                const options: EditorOpenerOptions = {\n                    selection: {\n                        start: node.range.start\n                    }\n                };\n                await this.selectInEditor(node, options);\n            }\n        });\n    }\n\n    protected async selectInEditor(node: MonacoOutlineSymbolInformationNode, options?: EditorOpenerOptions): Promise<void> {\n        // Avoid cyclic updates: Outline -> Editor -> Outline.\n        this.canUpdateOutline = false;\n        try {\n            await this.editorManager.open(node.uri, options);\n        } finally {\n            this.canUpdateOutline = true;\n        }\n    }\n\n    protected handleCurrentEditorChanged(): void {\n        this.toDisposeOnEditor.dispose();\n        if (this.toDisposeOnClose.disposed) {\n            return;\n        }\n        this.toDisposeOnClose.push(this.toDisposeOnEditor);\n        this.toDisposeOnEditor.push(Disposable.create(() => this.roots = undefined));\n        const editor = this.editorManager.currentEditor;\n        if (editor) {\n            const model = MonacoEditor.get(editor)!.getControl().getModel();\n            if (model) {\n                this.toDisposeOnEditor.push(model.onDidChangeContent(() => {\n                    this.roots = undefined; // Invalidate the previously resolved roots.\n                    this.updateOutline();\n                }));\n            }\n            this.toDisposeOnEditor.push(editor.editor.onSelectionChanged(selection => this.updateOutline(selection)));\n        }\n        this.updateOutline();\n    }\n\n    protected tokenSource = new CancellationTokenSource();\n    protected async updateOutline(editorSelection?: Range): Promise<void> {\n        if (!this.canUpdateOutline) {\n            return;\n        }\n        this.tokenSource.cancel();\n        this.tokenSource = new CancellationTokenSource();\n        const token = this.tokenSource.token;\n\n        const editor = MonacoEditor.get(this.editorManager.currentEditor);\n        const model = editor && editor.getControl().getModel();\n        const roots = model && await this.createRoots(model, token, editorSelection);\n        if (token.isCancellationRequested) {\n            return;\n        }\n        this.outlineViewService.publish(roots || []);\n    }\n\n    protected async createRoots(model: monaco.editor.IModel, token: CancellationToken, editorSelection?: Range): Promise<MonacoOutlineSymbolInformationNode[]> {\n        if (this.roots && this.roots.length > 0) {\n            // Reset the selection on the tree nodes, so that we can apply the new ones based on the `editorSelection`.\n            const resetSelection = (node: MonacoOutlineSymbolInformationNode) => {\n                node.selected = false;\n                node.children.forEach(resetSelection);\n            };\n            this.roots.forEach(resetSelection);\n        } else {\n            this.roots = [];\n            const providers = await DocumentSymbolProviderRegistry.all(model);\n            if (token.isCancellationRequested) {\n                return [];\n            }\n            const uri = new URI(model.uri.toString());\n            for (const provider of providers) {\n                try {\n                    const symbols = await provider.provideDocumentSymbols(model, token);\n                    if (token.isCancellationRequested) {\n                        return [];\n                    }\n                    const nodes = this.createNodes(uri, symbols || []);\n                    this.roots.push(...nodes);\n                } catch {\n                    /* collect symbols from other providers */\n                }\n            }\n        }\n        this.applySelection(this.roots, editorSelection);\n        return this.roots;\n    }\n\n    protected createNodes(uri: URI, symbols: DocumentSymbol[]): MonacoOutlineSymbolInformationNode[] {\n        let rangeBased = false;\n        const ids = new Map();\n        const roots: MonacoOutlineSymbolInformationNode[] = [];\n        const nodesByName = symbols.sort(this.orderByPosition).reduce((result, symbol) => {\n            const node = this.createNode(uri, symbol, ids);\n            if (symbol.children) {\n                MonacoOutlineSymbolInformationNode.insert(roots, node);\n            } else {\n                rangeBased = rangeBased || symbol.range.startLineNumber !== symbol.range.endLineNumber;\n                const values = result.get(symbol.name) || [];\n                values.push({ symbol, node });\n                result.set(symbol.name, values);\n            }\n            return result;\n        }, new Map<string, MonacoOutlineContribution.NodeAndSymbol[]>());\n\n        for (const nodes of nodesByName.values()) {\n            for (const { node, symbol } of nodes) {\n                if (!symbol.containerName) {\n                    MonacoOutlineSymbolInformationNode.insert(roots, node);\n                } else {\n                    const possibleParents = nodesByName.get(symbol.containerName);\n                    if (possibleParents) {\n                        const parent = possibleParents.find(possibleParent => this.parentContains(symbol, possibleParent.symbol, rangeBased));\n                        if (parent) {\n                            node.parent = parent.node;\n                            MonacoOutlineSymbolInformationNode.insert(parent.node.children, node);\n                        }\n                    }\n                }\n            }\n        }\n        if (!roots.length) {\n            const nodes = nodesByName.values().next().value;\n            if (nodes && !nodes[0].node.parent) {\n                return [nodes[0].node];\n            }\n            return [];\n        }\n        return roots;\n    }\n\n    /**\n     * Sets the selection on the sub-trees based on the optional editor selection.\n     * Select the narrowest node that is strictly contains the editor selection.\n     */\n    protected applySelection(roots: MonacoOutlineSymbolInformationNode[], editorSelection?: Range): boolean {\n        if (editorSelection) {\n            for (const root of roots) {\n                if (this.parentContains(editorSelection, root.fullRange, true)) {\n                    const { children } = root;\n                    root.selected = !root.expanded || !this.applySelection(children, editorSelection);\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Returns `true` if `candidate` is strictly contained inside `parent`\n     *\n     * If the argument is a `DocumentSymbol`, then `getFullRange` will be used to retrieve the range of the underlying symbol.\n     */\n    protected parentContains(candidate: DocumentSymbol | Range, parent: DocumentSymbol | Range, rangeBased: boolean): boolean {\n        // TODO: move this code to the `monaco-languageclient`: https://github.com/eclipse-theia/theia/pull/2885#discussion_r217800446\n        const candidateRange = Range.is(candidate) ? candidate : this.getFullRange(candidate);\n        const parentRange = Range.is(parent) ? parent : this.getFullRange(parent);\n        const sameStartLine = candidateRange.start.line === parentRange.start.line;\n        const startColGreaterOrEqual = candidateRange.start.character >= parentRange.start.character;\n        const startLineGreater = candidateRange.start.line > parentRange.start.line;\n        const sameEndLine = candidateRange.end.line === parentRange.end.line;\n        const endColSmallerOrEqual = candidateRange.end.character <= parentRange.end.character;\n        const endLineSmaller = candidateRange.end.line < parentRange.end.line;\n        return (((sameStartLine && startColGreaterOrEqual || startLineGreater) &&\n            (sameEndLine && endColSmallerOrEqual || endLineSmaller)) || !rangeBased);\n    }\n\n    /**\n     * `monaco` to LSP `Range` converter. Converts the `1-based` location indices into `0-based` ones.\n     */\n    protected asRange(range: monaco.IRange): Range {\n        const { startLineNumber, startColumn, endLineNumber, endColumn } = range;\n        return {\n            start: {\n                line: startLineNumber - 1,\n                character: startColumn - 1\n            },\n            end: {\n                line: endLineNumber - 1,\n                character: endColumn - 1\n            }\n        };\n    }\n\n    /**\n     * Returns with a range enclosing this symbol not including leading/trailing whitespace but everything else like comments.\n     * This information is typically used to determine if the clients cursor is inside the symbol to reveal in the symbol in the UI.\n     * This allows to obtain the range including the associated comments.\n     *\n     * See: [`DocumentSymbol#range`](https://microsoft.github.io/language-server-protocol/specification#textDocument_documentSymbol) for more details.\n     */\n    protected getFullRange(documentSymbol: DocumentSymbol): Range {\n        return this.asRange(documentSymbol.range);\n    }\n\n    /**\n     * The range that should be selected and revealed when this symbol is being picked, e.g the name of a function. Must be contained by the `getSelectionRange`.\n     *\n     * See: [`DocumentSymbol#selectionRange`](https://microsoft.github.io/language-server-protocol/specification#textDocument_documentSymbol) for more details.\n     */\n    protected getNameRange(documentSymbol: DocumentSymbol): Range {\n        return this.asRange(documentSymbol.selectionRange);\n    }\n\n    protected createNode(uri: URI, symbol: DocumentSymbol, ids: Map<string, number>, parent?: MonacoOutlineSymbolInformationNode): MonacoOutlineSymbolInformationNode {\n        const id = this.createId(symbol.name, ids);\n        const children: MonacoOutlineSymbolInformationNode[] = [];\n        const node: MonacoOutlineSymbolInformationNode = {\n            children,\n            id,\n            iconClass: SymbolKind[symbol.kind].toString().toLowerCase(),\n            name: this.getName(symbol),\n            detail: this.getDetail(symbol),\n            parent,\n            uri,\n            range: this.getNameRange(symbol),\n            fullRange: this.getFullRange(symbol),\n            selected: false,\n            expanded: this.shouldExpand(symbol)\n        };\n        if (symbol.children) {\n            for (const child of symbol.children) {\n                MonacoOutlineSymbolInformationNode.insert(children, this.createNode(uri, child, ids, node));\n            }\n        }\n        return node;\n    }\n\n    protected getName(symbol: DocumentSymbol): string {\n        return symbol.name;\n    }\n\n    protected getDetail(symbol: DocumentSymbol): string {\n        return symbol.detail;\n    }\n\n    protected createId(name: string, ids: Map<string, number>): string {\n        const counter = ids.get(name);\n        const index = typeof counter === 'number' ? counter + 1 : 0;\n        ids.set(name, index);\n        return name + '_' + index;\n    }\n\n    protected shouldExpand(symbol: DocumentSymbol): boolean {\n        return [SymbolKind.Class,\n        SymbolKind.Enum, SymbolKind.File,\n        SymbolKind.Interface, SymbolKind.Module,\n        SymbolKind.Namespace, SymbolKind.Object,\n        SymbolKind.Package, SymbolKind.Struct].indexOf(symbol.kind) !== -1;\n    }\n\n    protected orderByPosition(symbol: DocumentSymbol, symbol2: DocumentSymbol): number {\n        const startLineComparison = symbol.range.startLineNumber - symbol2.range.startLineNumber;\n        if (startLineComparison !== 0) {\n            return startLineComparison;\n        }\n        const startOffsetComparison = symbol.range.startColumn - symbol2.range.startColumn;\n        if (startOffsetComparison !== 0) {\n            return startOffsetComparison;\n        }\n        const endLineComparison = symbol.range.endLineNumber - symbol2.range.endLineNumber;\n        if (endLineComparison !== 0) {\n            return endLineComparison;\n        }\n        return symbol.range.endColumn - symbol2.range.endColumn;\n    }\n\n}\nexport namespace MonacoOutlineContribution {\n    export interface NodeAndSymbol {\n        node: MonacoOutlineSymbolInformationNode;\n        symbol: DocumentSymbol\n    }\n}\n\nexport interface MonacoOutlineSymbolInformationNode extends OutlineSymbolInformationNode {\n    uri: URI;\n    range: Range;\n    fullRange: Range;\n    detail?: string;\n    parent: MonacoOutlineSymbolInformationNode | undefined;\n    children: MonacoOutlineSymbolInformationNode[];\n}\n\nexport namespace MonacoOutlineSymbolInformationNode {\n    export function is(node: TreeNode): node is MonacoOutlineSymbolInformationNode {\n        return OutlineSymbolInformationNode.is(node) && 'uri' in node && 'range' in node;\n    }\n    export function insert(nodes: MonacoOutlineSymbolInformationNode[], node: MonacoOutlineSymbolInformationNode): void {\n        const index = nodes.findIndex(current => compare(node, current) < 0);\n        if (index === -1) {\n            nodes.push(node);\n        } else {\n            nodes.splice(index, 0, node);\n        }\n    }\n    export function compare(node: MonacoOutlineSymbolInformationNode, node2: MonacoOutlineSymbolInformationNode): number {\n        const startLineComparison = node.range.start.line - node2.range.start.line;\n        if (startLineComparison !== 0) {\n            return startLineComparison;\n        }\n        const startColumnComparison = node.range.start.character - node2.range.start.character;\n        if (startColumnComparison !== 0) {\n            return startColumnComparison;\n        }\n        const endLineComparison = node2.range.end.line - node.range.end.line;\n        if (endLineComparison !== 0) {\n            return endLineComparison;\n        }\n        return node2.range.end.character - node.range.end.character;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 RedHat and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable } from 'inversify';\nimport { Event, Emitter } from '@theia/core/lib/common/event';\nimport { Tree } from '@theia/core/lib/browser/tree/tree';\nimport { DepthFirstTreeIterator } from '@theia/core/lib/browser/tree/tree-iterator';\nimport { TreeDecorator, TreeDecoration } from '@theia/core/lib/browser/tree/tree-decorator';\nimport { MonacoOutlineSymbolInformationNode} from './monaco-outline-contribution';\n\n@injectable()\nexport class MonacoOutlineDecorator implements TreeDecorator {\n\n    readonly id = 'theia-monaco-outline-decorator';\n\n    protected readonly emitter = new Emitter<(tree: Tree) => Map<string, TreeDecoration.Data>>();\n\n    async decorations(tree: Tree): Promise<Map<string, TreeDecoration.Data>> {\n        return this.collectDecorations(tree);\n    }\n\n    get onDidChangeDecorations(): Event<(tree: Tree) => Map<string, TreeDecoration.Data>> {\n        return this.emitter.event;\n    }\n\n    protected collectDecorations(tree: Tree): Map<string, TreeDecoration.Data> {\n      const result = new Map();\n        if (tree.root === undefined) {\n            return result;\n        }\n\n        for (const treeNode of new DepthFirstTreeIterator(tree.root)) {\n            if (MonacoOutlineSymbolInformationNode.is(treeNode) && treeNode.detail) {\n                result.set(treeNode.id, this.toDecoration(treeNode));\n            }\n        }\n\n        return result;\n    }\n\n    protected toDecoration(node: MonacoOutlineSymbolInformationNode): TreeDecoration.Data {\n        const captionSuffixes: TreeDecoration.CaptionAffix[] = [{\n                data: (node.detail || ''),\n                fontData: {\n                    color: 'var(--theia-ui-font-color2)',\n                }\n            }];\n\n        return {\n                captionSuffixes\n            };\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable } from 'inversify';\nimport URI from '@theia/core/lib/common/uri';\nimport { ILogger } from '@theia/core/lib/common/logger';\nimport { EditorManager } from '@theia/editor/lib/browser/editor-manager';\nimport { Disposable, DisposableCollection } from '@theia/core/lib/common/disposable';\nimport { EditorDecoration, EditorDecorationOptions } from '@theia/editor/lib/browser/decorations';\nimport { SemanticHighlightingService, SemanticHighlightingRange, Range } from '@theia/editor/lib/browser/semantic-highlight/semantic-highlighting-service';\nimport { MonacoEditor } from './monaco-editor';\nimport { MonacoEditorService } from './monaco-editor-service';\n\n/**\n * A helper class for grouping information about a decoration type that has\n * been registered with the editor service.\n */\nclass DecorationTypeInfo {\n    key: string;\n    options: monaco.editor.IModelDecorationOptions;\n}\n\n@injectable()\nexport class MonacoSemanticHighlightingService extends SemanticHighlightingService {\n\n    @inject(ILogger)\n    protected readonly logger: ILogger;\n\n    @inject(EditorManager)\n    protected readonly editorManager: EditorManager;\n\n    @inject(MonacoEditorService)\n    protected readonly monacoEditorService: MonacoEditorService;\n\n    protected readonly decorations = new Map<string, Set<string>>();\n    protected readonly toDisposeOnEditorClose = new Map<string, Disposable>();\n    protected readonly toDisposeOnUnregister = new Map<string, Disposable>();\n\n    // laguage id -> (scope index -> decoration type)\n    protected readonly decorationTypes = new Map<string, Map<number, DecorationTypeInfo>>();\n\n    private lastDecorationTypeId: number = 0;\n\n    private nextDecorationTypeKey(): string {\n        return 'MonacoSemanticHighlighting' + (++this.lastDecorationTypeId);\n    }\n\n    protected registerDecorationTypesForLanguage(languageId: string): void {\n        const scopes = this.scopes.get(languageId);\n        if (scopes) {\n            const decorationTypes = new Map<number, DecorationTypeInfo>();\n            for (let index = 0; index < scopes.length; index++) {\n                const modelDecoration = this.toDecorationType(scopes[index]);\n                if (modelDecoration) {\n                    decorationTypes.set(index, modelDecoration);\n                }\n            }\n            this.decorationTypes.set(languageId, decorationTypes);\n        }\n    }\n\n    protected removeDecorationTypesForLanguage(languageId: string): void {\n        const decorationTypes = this.decorationTypes.get(languageId);\n        if (!decorationTypes) {\n            this.logger.warn(`No decoration types are registered for language: ${languageId}`);\n            return;\n        }\n        for (const [, decorationType] of decorationTypes) {\n            this.monacoEditorService.removeDecorationType(decorationType.key);\n        }\n    }\n\n    protected refreshDecorationTypesForLanguage(languageId: string): void {\n        const decorationTypes = this.decorationTypes.get(languageId);\n        const scopes = this.scopes.get(languageId);\n        if (!decorationTypes || !scopes) {\n            this.logger.warn(`No decoration types are registered for language: ${languageId}`);\n            return;\n        }\n        for (const [scope, decorationType] of decorationTypes) {\n            // Pass in the existing key to associate the new color with the same\n            // decoration type, thereby reusing it.\n            const newDecorationType = this.toDecorationType(scopes[scope], decorationType.key);\n            if (newDecorationType) {\n                decorationType.options = newDecorationType.options;\n            }\n        }\n    }\n\n    register(languageId: string, scopes: string[][] | undefined): Disposable {\n        const result = super.register(languageId, scopes);\n        this.registerDecorationTypesForLanguage(languageId);\n        const disposable = this.themeService().onThemeChange(() => {\n            // When the theme changes, refresh the decoration types to reflect\n            // the colors for the old theme.\n            // Note that we do not remove the old decoration types and add new ones.\n            // The new ones would have different class names, and we'd have to\n            // update all open editors to use the new class names.\n            this.refreshDecorationTypesForLanguage(languageId);\n        });\n        this.toDisposeOnUnregister.set(languageId, disposable);\n        return result;\n    }\n\n    protected unregister(languageId: string): void {\n        super.unregister(languageId);\n        this.removeDecorationTypesForLanguage(languageId);\n        const disposable = this.toDisposeOnUnregister.get(languageId);\n        if (disposable) {\n            disposable.dispose();\n        }\n        this.decorationTypes.delete(languageId);\n        this.toDisposeOnUnregister.delete(languageId);\n    }\n\n    protected toDecorationType(scopes: string[], reuseKey?: string): DecorationTypeInfo | undefined {\n        const key = reuseKey || this.nextDecorationTypeKey();\n        // TODO: why for-of? How to pick the right scope? Is it fine to get the first element (with the narrowest scope)?\n        for (const scope of scopes) {\n            const tokenTheme = this.tokenTheme();\n            const metadata = tokenTheme.match(undefined, scope);\n            // Don't use the inlineClassName from the TokenMetadata, because this\n            // will conflict with styles used for TM scopes\n            // (https://github.com/Microsoft/monaco-editor/issues/1070).\n            // Instead, get the token color, use registerDecorationType() to cause\n            // monaco to allocate a new inlineClassName for that color, and use\n            // resolveDecorationOptions() to get an IModelDecorationOptions\n            // containing that inlineClassName.\n            const colorIndex = monaco.modes.TokenMetadata.getForeground(metadata);\n            const color = tokenTheme.getColorMap()[colorIndex];\n            // If we wanted to support other decoration options such as font style,\n            // we could include them here.\n            const options: monaco.editor.IDecorationRenderOptions = {\n                color: color.toString(),\n            };\n            this.monacoEditorService.registerDecorationType(key, options);\n            return {\n                key,\n                options: this.monacoEditorService.resolveDecorationOptions(key, false)\n            };\n        }\n        return undefined;\n    }\n\n    async decorate(languageId: string, uri: URI, ranges: SemanticHighlightingRange[]): Promise<void> {\n        const editor = await this.editor(uri);\n        if (!editor) {\n            return;\n        }\n\n        const key = uri.toString();\n        if (!this.toDisposeOnEditorClose.has(key)) {\n            this.toDisposeOnEditorClose.set(key, new DisposableCollection(\n                editor.onDispose(() => this.deleteDecorations(key, editor))\n            ));\n        }\n\n        const newDecorations = ranges.map(range => this.toDecoration(languageId, range));\n        const oldDecorations = this.oldDecorations(key, editor, ranges);\n        const newState = editor.deltaDecorations({\n            newDecorations,\n            oldDecorations\n        });\n\n        const decorationIds = this.decorationIds(key);\n        newState.forEach(id => decorationIds.add(id));\n        this.decorations.set(key, decorationIds);\n    }\n\n    dispose(): void {\n        Array.from(this.toDisposeOnEditorClose.values()).forEach(disposable => disposable.dispose());\n    }\n\n    protected decorationIds(uri: string | URI): Set<string> {\n        return this.decorations.get(typeof uri === 'string' ? uri : uri.toString()) || new Set();\n    }\n\n    protected async editor(uri: string | URI): Promise<MonacoEditor | undefined> {\n        const editorWidget = await this.editorManager.getByUri(typeof uri === 'string' ? new URI(uri) : uri);\n        if (!!editorWidget && editorWidget.editor instanceof MonacoEditor) {\n            return editorWidget.editor;\n        }\n        return undefined;\n    }\n\n    protected async model(uri: string | URI): Promise<monaco.editor.ITextModel | undefined> {\n        const editor = await this.editor(uri);\n        if (editor) {\n            return editor.getControl().getModel() || undefined;\n        }\n        return undefined;\n    }\n\n    /**\n     * Returns all the semantic highlighting decoration IDs that are affected by any of the range arguments.\n     */\n    protected oldDecorations(uri: string, editor: MonacoEditor, ranges: SemanticHighlightingRange[]): string[] {\n        const ids = this.decorationIds(uri);\n        const affectedLines = Array.from(new Set(ranges.map(r => [r.start.line, r.end.line]).reduce((prev, curr) => prev.concat(curr), [])));\n        return affectedLines\n            .map(line => editor.getLinesDecorations(line, line))\n            .reduce((prev, curr) => prev.concat(curr), [])\n            .map(decoration => decoration.id)\n            .filter(id => ids.has(id));\n    }\n\n    protected deleteDecorations(uri: string, editor: MonacoEditor): void {\n        const ids = this.decorations.get(uri);\n        if (ids) {\n            const oldDecorations = Array.from(ids);\n            editor.deltaDecorations({\n                newDecorations: [],\n                oldDecorations\n            });\n            this.decorations.delete(uri);\n        }\n        const disposable = this.toDisposeOnEditorClose.get(uri);\n        if (disposable) {\n            disposable.dispose();\n        }\n        this.toDisposeOnEditorClose.delete(uri);\n    }\n\n    protected toDecoration(languageId: string, range: SemanticHighlightingRange): EditorDecoration {\n        const { start, end } = range;\n        const options = this.toOptions(languageId, range.scope);\n        return {\n            range: Range.create(start, end),\n            options\n        };\n    }\n\n    protected toOptions(languageId: string, scope: number | undefined): EditorDecorationOptions {\n        if (scope !== undefined) {\n            const decorationTypes = this.decorationTypes.get(languageId);\n            if (decorationTypes) {\n                const decoration = decorationTypes.get(scope);\n                if (decoration) {\n                    return {\n                        inlineClassName: decoration.options.inlineClassName || undefined\n                    };\n                }\n            }\n        }\n        return {};\n    }\n\n    protected themeService(): monaco.services.IStandaloneThemeService {\n        return monaco.services.StaticServices.standaloneThemeService.get();\n    }\n\n    protected tokenTheme(): monaco.services.TokenTheme {\n        return this.themeService().getTheme().tokenTheme;\n    }\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport * as path from 'path';\nimport { ContainerModule } from 'inversify';\nimport { loadVsRequire, loadMonaco } from '../browser/monaco-loader';\n\nexport { ContainerModule };\n\n// tslint:disable-next-line:no-any\nconst s = <any>self;\n\n/**\n * We cannot use `FileUri#create` because URIs with file scheme cannot be properly decoded via the AMD loader.\n * So if you have a FS path on Windows: `C:\\Users\\foo`, then you will get a URI `file:///c%3A/Users/foo` which\n * will be converted into the `c%3A/Users/foo` FS path on Windows by the AMD loader.\n */\nconst uriFromPath = (filePath: string) => {\n    let pathName = path.resolve(filePath).replace(/\\\\/g, '/');\n    if (pathName.length > 0 && pathName.charAt(0) !== '/') {\n        pathName = '/' + pathName;\n    }\n    return encodeURI('file://' + pathName);\n};\n\nexport default loadVsRequire(global)\n    .then(vsRequire => {\n        const baseUrl = uriFromPath(__dirname);\n        vsRequire.config({ baseUrl });\n\n        // workaround monaco-css not understanding the environment\n        s.module = undefined;\n        // workaround monaco-typescript not understanding the environment\n        s.process.browser = true;\n        return loadMonaco(vsRequire);\n    })\n    .then(() => import('../browser/monaco-frontend-module'))\n    .then(module => module.default);\n","\nvar content = require(\"!!../../../../../css-loader/index.js!./index.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../css-loader/index.js!./index.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../css-loader/index.js!./index.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","\nvar content = require(\"!!../../../../../css-loader/index.js!./symbol-icons.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../../css-loader/index.js!./symbol-icons.css\", function() {\n\t\tvar newContent = require(\"!!../../../../../css-loader/index.js!./symbol-icons.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","module.exports = __webpack_public_path__ + \"cf2aabacdc2b3a5768b03545cb1d8330.svg\";","/********************************************************************************\n * Copyright (C) 2018 Redhat, Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { inject, injectable, named } from 'inversify';\nimport { ContributionProvider } from '@theia/core/lib/common/contribution-provider';\nimport { TreeDecorator, AbstractTreeDecoratorService } from '@theia/core/lib/browser/tree/tree-decorator';\n\n/**\n * Symbol for all decorators that would like to contribute into the outline.\n */\nexport const OutlineTreeDecorator = Symbol('OutlineTreeDecorator');\n\n/**\n * Decorator service for the outline.\n */\n@injectable()\nexport class OutlineDecoratorService extends AbstractTreeDecoratorService {\n\n    constructor(@inject(ContributionProvider) @named(OutlineTreeDecorator) protected readonly contributions: ContributionProvider<TreeDecorator>) {\n        super(contributions.getContributions());\n    }\n\n}\n","/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport { injectable, inject } from 'inversify';\nimport { Event, Emitter, DisposableCollection } from '@theia/core';\nimport { WidgetFactory } from '@theia/core/lib/browser';\nimport { OutlineViewWidget, OutlineViewWidgetFactory, OutlineSymbolInformationNode } from './outline-view-widget';\nimport { Widget } from '@phosphor/widgets';\n\n@injectable()\nexport class OutlineViewService implements WidgetFactory {\n\n    id = 'outline-view';\n\n    protected widget?: OutlineViewWidget;\n    protected readonly onDidChangeOutlineEmitter = new Emitter<OutlineSymbolInformationNode[]>();\n    protected readonly onDidChangeOpenStateEmitter = new Emitter<boolean>();\n    protected readonly onDidSelectEmitter = new Emitter<OutlineSymbolInformationNode>();\n    protected readonly onDidOpenEmitter = new Emitter<OutlineSymbolInformationNode>();\n\n    constructor(@inject(OutlineViewWidgetFactory) protected factory: OutlineViewWidgetFactory) { }\n\n    get onDidSelect(): Event<OutlineSymbolInformationNode> {\n        return this.onDidSelectEmitter.event;\n    }\n\n    get onDidOpen(): Event<OutlineSymbolInformationNode> {\n        return this.onDidOpenEmitter.event;\n    }\n\n    get onDidChangeOutline(): Event<OutlineSymbolInformationNode[]> {\n        return this.onDidChangeOutlineEmitter.event;\n    }\n\n    get onDidChangeOpenState(): Event<boolean> {\n        return this.onDidChangeOpenStateEmitter.event;\n    }\n\n    get open(): boolean {\n        return this.widget !== undefined && this.widget.isVisible;\n    }\n\n    /**\n     * Publish the collection of outline view symbols.\n     * - Publishing includes setting the `OutlineViewWidget` tree with symbol information.\n     * @param roots the list of outline symbol information nodes.\n     */\n    publish(roots: OutlineSymbolInformationNode[]): void {\n        if (this.widget) {\n            this.widget.setOutlineTree(roots);\n            this.onDidChangeOutlineEmitter.fire(roots);\n        }\n    }\n\n    createWidget(): Promise<Widget> {\n        this.widget = this.factory();\n        const disposables = new DisposableCollection();\n        disposables.push(this.widget.onDidChangeOpenStateEmitter.event(open => this.onDidChangeOpenStateEmitter.fire(open)));\n        disposables.push(this.widget.model.onOpenNode(node => this.onDidOpenEmitter.fire(node as OutlineSymbolInformationNode)));\n        disposables.push(this.widget.model.onSelectionChanged(selection => this.onDidSelectEmitter.fire(selection[0] as OutlineSymbolInformationNode)));\n        this.widget.disposed.connect(() => {\n            this.widget = undefined;\n            disposables.dispose();\n        });\n        return Promise.resolve(this.widget);\n    }\n}\n","exports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".monaco-editor {\\n    padding-bottom: 5.6px;\\n    font-family: var(--theia-ui-font-family);\\n    font-size: inherit !important;\\n}\\n\\n.monaco-editor, .monaco-editor-background {\\n    background: var(--theia-layout-color0);\\n}\\n\\n.monaco-editor .margin {\\n    background: var(--theia-layout-color0);\\n}\\n\\n.monaco-keybinding-key {\\n    color: var(--theia-ui-font-color1) !important;\\n}\\n\\n/*\\n * set z-index to 0, so tabs are not above overlay widgets\\n */\\n.p-TabBar.theia-app-centers {\\n    z-index: 0;\\n    display: flex;\\n}\\n\\n/*\\n * we need to disable the background image when using font awesome icons and file-icons\\n */\\n.monaco-quick-open-widget .quick-open-tree .quick-open-entry .quick-open-entry-icon.fa,\\n.monaco-quick-open-widget .quick-open-tree .quick-open-entry .quick-open-entry-icon.file-icon {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    background-image: none;\\n    margin-right: 0px;\\n}\\n\\n.monaco-quick-open-widget {\\n    background-color: var(--theia-layout-color1) !important;\\n}\\n\\n.quick-open-entry .quick-open-row .monaco-icon-label .monaco-icon-label-description-container .monaco-highlighted-label .highlight {\\n    color: var(--theia-accent-color1);\\n}\\n\\n.quick-open-entry .quick-open-row .monaco-icon-label .monaco-icon-label-description-container .label-description {\\n    color: var(--theia-ui-font-color2);\\n    font-size: calc(var(--theia-ui-font-size0) * 0.95);\\n}\\n\\n.monaco-editor .zone-widget {\\n\\tposition: absolute;\\n\\tz-index: 10;\\n}\\n\\n.monaco-editor .zone-widget .zone-widget-container {\\n\\tborder-top-style: solid;\\n\\tborder-bottom-style: solid;\\n\\tborder-top-width: 0;\\n\\tborder-bottom-width: 0;\\n    border-top-color: var(--theia-accent-color2);\\n    border-bottom-color: var(--theia-accent-color2);\\n\\tposition: relative;\\n}\\n\\n.monaco-editor .parameter-hints-widget > .wrapper {\\n    overflow: hidden;\\n}\\n\", \"\"]);\n\n// exports\n","var escape = require(\"../../../../../css-loader/lib/url/escape.js\");\nexports = module.exports = require(\"../../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".symbol-icon {\\n    background-image: url(\" + escape(require(\"./symbol-sprite.svg\")) + \");\\n    background-repeat: no-repeat;\\n    overflow: hidden;\\n    min-width: 16px;\\n    height: 16px;\\n    margin-right: 4px;\\n}\\n\\n.symbol-icon-center {\\n    align-self: center;\\n}\\n\\n.symbol-icon.method {\\n    background-position: 0 calc(var(--theia-sprite-y-offset));\\n}\\n\\n.symbol-icon.constant,\\n.symbol-icon.variable {\\n    background-position: -22px calc(var(--theia-sprite-y-offset));\\n}\\n\\n.symbol-icon.class {\\n    background-position: -42px calc(var(--theia-sprite-y-offset));\\n}\\n\\n.symbol-icon.interface {\\n    background-position: -62px calc(var(--theia-sprite-y-offset));\\n}\\n\\n.symbol-icon.module {\\n    background-position: -82px calc(var(--theia-sprite-y-offset));\\n}\\n\\n.symbol-icon.property {\\n    background-position: -102px calc(var(--theia-sprite-y-offset));\\n}\\n\\n.symbol-icon.enum {\\n    background-position: -122px calc(var(--theia-sprite-y-offset));\\n}\\n\\n.symbol-icon.rule {\\n    background-position: -242px calc(var(--theia-sprite-y-offset));\\n}\\n\\n.symbol-icon.file {\\n    background-position: -262px calc(var(--theia-sprite-y-offset));\\n}\", \"\"]);\n\n// exports\n"],"sourceRoot":""}